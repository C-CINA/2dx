#!/bin/csh -ef
#############################################################################
#                                                                           #
# Title: Export particle stack                                				#
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 29/07/2016                                             #
# Last Modification: 29/07/2016                                             #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 2
#
#
# MANUAL: This script extracts particles from the 2D crystal images to be refined in single-particle fashion. Currently supports only FREALIGN.
#
# DISPLAY: SPR_DIR
# DISPLAY: use_masked_image
# DISPLAY: SPR_boxsize
# DISPLAY: SPR_PhaseShift
# DISPLAY: SPR_SIGCC
# DISPLAY: SPR_InvertContrast
# DISPLAY: SPR_NormalizeBox
# DISPLAY: SPR_SigmaNorm
# DISPLAY: SPR_WhichCTF
# DISPLAY: SPR_CalculateDefocusTilted
# DISPLAY: SPR_SavePhaseFlipped
# DISPLAY: SPR_SaveWienerFiltered
# DISPLAY: SPR_WhichTiltGeometry
# DISPLAY: CS
# DISPLAY: KV
# DISPLAY: sample_pixel
# DISPLAY: phacon
# DISPLAY: magnification
# DISPLAY: SPR_SYM
# DISPLAY: SPR_SavePickFig
#
#$end_local_vars
#
set bin_2dx = ""
set proc_2dx = ""
set app_python = ""

set scriptname = ExportParticleStack

#
set SPR_RESMIN = ""
set SPR_RESMAX = ""
set SPR_PhaseShift = ""
set SPR_boxsize = ""
set SPR_SIGCC = ""
set SPR_InvertContrast = ""
set SPR_NormalizeBox = ""
set SPR_CalculateDefocusTilted = ""
set SPR_SavePhaseFlipped = ""
set SPR_SaveWienerFiltered = ""
set SPR_SigmaNorm = ""
set SPR_WhichTiltGeometry = ""
set SPR_WhichCTF = ""
set SPR_SavePickFig = ""
set CS = ""
set KV = ""
set sample_pixel = ""
set phacon = ""
set magnification = ""
set use_masked_image = ""
#
set SPR_DIR = ""
set SPR_IMGS_DIR = ../
set SPR_MERGEFILE = 2dx_merge_dirfile.dat
set SPR_STACKS_DIR = ${SPR_DIR}/stacks/
set SPR_PICKING_DIR = ${SPR_DIR}/picking/
set SPR_STACK_ROOTNAME = 'particles'

#$end_vars

set ccp4_setup = 'y'
source ${proc_2dx}/initialize
#
if ( -e LOGS/${scriptname}.results ) then
	mv LOGS/${scriptname}.results LOGS/${scriptname}.results.old
endif

# Start script commands:
mkdir -p ${SPR_STACKS_DIR}

if ( ${SPR_SavePickFig} == "y" ) then
	mkdir -p ${SPR_PICKING_DIR}
endif

${app_python} ${proc_2dx}/SPR_ExtractParticles.py ${SPR_IMGS_DIR} ${SPR_MERGEFILE} ${SPR_PICKING_DIR} ${SPR_STACKS_DIR} ${SPR_STACK_ROOTNAME} ${SPR_boxsize} ${SPR_PhaseShift} ${sample_pixel} ${KV} ${CS} ${phacon} ${magnification} ${SPR_SIGCC} ${SPR_InvertContrast} ${SPR_NormalizeBox} ${SPR_CalculateDefocusTilted} ${SPR_SavePhaseFlipped} ${SPR_SaveWienerFiltered} ${SPR_SigmaNorm} ${SPR_WhichTiltGeometry} ${SPR_WhichCTF} ${SPR_SavePickFig} ${use_masked_image}

if ( ${SPR_SavePhaseFlipped} == "y" && ${SPR_WhichCTF} != "Micrograph" ) then
	cp ${SPR_STACKS_DIR}/${SPR_STACK_ROOTNAME}_1_r1.par ${SPR_STACKS_DIR}/${SPR_STACK_ROOTNAME}_phase-flipped_1_r1.par
endif

if ( ${SPR_SaveWienerFiltered} == "y" && ${SPR_WhichCTF} != "Micrograph" ) then
	cp ${SPR_STACKS_DIR}/${SPR_STACK_ROOTNAME}_1_r1.par ${SPR_STACKS_DIR}/${SPR_STACK_ROOTNAME}_wiener-filtered_1_r1.par
endif

### BELOW IS A SERIOUS KLUDGE BECAUSE EMAN2/SPARX DO NOT SUPPORT WRITING TO MRC STACKS BIGGER THAN 65535 IMAGES DIRECTLY ###
echo "Now converting stack(s) to .mrcs format..."
foreach i ( ${SPR_STACKS_DIR}/*.hdf )
	e2proc2d.py $i $i.mrc --twod2threed
	rm $i
end
rename .hdf.mrc .mrcs ${SPR_STACKS_DIR}/*
echo "Done!"

foreach i (${SPR_STACKS_DIR}/*.mrcs)
	echo "# IMAGE-IMPORTANT MRCS: $i <STACK: `basename $i`>" >> LOGS/${scriptname}.results
end

if ( ${SPR_SavePickFig} == "y" ) then

	foreach i (${SPR_PICKING_DIR}/*.png)
		echo "# IMAGE PNG: $i <PNG: `basename $i`>" >> LOGS/${scriptname}.results
	end
	
endif

echo ":: "
echo ":: Done!"
echo ":: "
