#!/bin/csh -fe
####
#
#############################################################################
#                                                                           #
# Title: Unpack Stack                                                       #
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 03/21/2011                                             #
# Last Modification: 03/21/2011                                             #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 10
#
# MANUAL: <B>Welcome to the File Importer</B>
#
# DISPLAY: imagename_original
# DISPLAY: imagename
# DISPLAY: nonmaskimagename
# DISPLAY: imagenumber
# DISPLAY: tempkeep
# DISPLAY: comment
# DISPLAY: crop_histogram
# DISPLAY: crop_histogram_stdev
# DISPLAY: movie_stackname
# DISPLAY: import_rawstack
# DISPLAY: import_rawstack_original
# DISPLAY: import_rawstack_type
# DISPLAY: import_gainref
# DISPLAY: import_gaincorrectedstack
# DISPLAY: import_produce_gainref2D
# DISPLAY: import_produce_gainref2Dfft
# DISPLAY: magnification
# DISPLAY: stepdigitizer
# DISPLAY: Calc_from_sample_pixel
# DISPLAY: sample_pixel
# DISPLAY: movie_imagenumber_total
#
#$end_local_vars
#
# Static directory variables at disposition are:
# appDir_2dx
# scripts-standard_2dx
# scripts-custom_2dx
#
set bin_2dx = ""
set proc_2dx = ""
set SCRATCH_DISK = ""
#
# Variables to be available from the config file are:
set tempkeep = ""
set imagename = ""
set nonmaskimagename = ""
set crop_histogram = ""
set crop_histogram_stdev = ""
set movie_stackname = ""
set import_rawstack = ""
set import_rawstack_type = ""
set import_gainref = ""
set import_gaincorrectedstack = ""
set import_produce_gainref2D = ""
set import_produce_gainref2Dfft = ""
set import_gaincorrectedstack_2d = ""
set import_gaincorrectedstack_2d_fft = ""
set magnification = ""
set stepdigitizer = ""
set Calc_from_sample_pixel = ""
set sample_pixel = ""
set movie_imagenumber_total = ""
#
#$end_vars
#
# Input example: (these have extensions)
# set import_rawstack = "Prot_Sep29_16.59.59_oristack.mrc"
# set import_gainref = "CountRef_Prot_Sep28_15.27.14.dm4"
#
# Output example: (no extensions)
# set import_gaincorrectedstack = "Prot_Sep29_16_59_59_stack_raw"
# set import_gaincorrectedstack_2d = "Prot_Sep29_16_59_59_raw"
# set import_gaincorrectedstack_2d_fft = "Prot_Sep29_16_59_59_raw_fft"
#
# set imagename = "Prot_Sep29_16_59_59"
# set nonmaskimagename = "Prot_Sep29_16_59_59"
# set movie_stackname = "Prot_Sep29_16_59_59_stack_raw"
#
set scriptname = import_unpack
\rm -f LOGS/${scriptname}.results
#
set ccp4_setup = 'y'
source ${proc_2dx}/initialize
#
source ${proc_2dx}/2dx_makedirs
#
# Check the type of files provided. 
# Categories are:
# - raw movie, counted, non-drift-corrected, only dark-subtracted.
# - gain reference file, to multiply the dark-subtracted frames by.
# - drift-corrected movie
# - drift-corrected and averaged image
#
# CHEN: Temporary fix:
set import_gainref = "CountRef_TssA_Sep28_15.27.14.dm4"
echo "set import_gainref = ${import_gainref}" >> LOGS/${scriptname}.results
#
set namestub = `echo ${import_rawstack} | sed -e 's/\.mrc//g' -e 's/\.tif//g' | sed -e 's/\./_/g' -e 's/\,/_/g' -e 's/ /_/g' -e's/:/_/g' -e's/#/_/g' | tr 'A-Z' 'a-z'`
set import_gaincorrectedstack = ${namestub}_stack_raw
set import_gaincorrectedstack_2d = ${namestub}_raw
set import_gaincorrectedstack_2d_fft = ${namestub}_raw_fft
#
cp -f ../${import_gainref} .
#
echo "<<@progress: 10>>"
#
if ( ${import_rawstack_type} == "1" ) then
  if ( ! -e ${import_rawstack} ) then
    ${proc_2dx}/protest "ERROR: Raw stack ${import_rawstack} not found."
  endif    
  if ( ! -e ${import_gainref} ) then
    ${proc_2dx}/protest "ERROR: Gain reference ${import_gainref} not found."
  endif
  echo "# IMAGE-IMPORTANT: ${import_rawstack} <Raw, dark-sub. stack (stack)>" >> LOGS/${scriptname}.results
  echo "# IMAGE-IMPORTANT: ${import_gainref} <Gain reference (2D)>" >> LOGS/${scriptname}.results
  echo "<<@evaluate>>"
  echo "::Raw movie as dark-subtracted stack present. Gain reference found."
  #
  #################################################################################
  echo "::Running: clip unpack ${import_rawstack} ${import_gainref} ${import_gaincorrectedstack}.mrc"
  #################################################################################
  #
  clip unpack -m 2 ${import_rawstack} ${import_gainref} ${import_gaincorrectedstack}.mrc
  #
  set movie_stackname = ${import_gaincorrectedstack}
  echo "set movie_stackname = ${movie_stackname}.mrc"  >> LOGS/${scriptname}.results
  echo "# IMAGE-IMPORTANT: ${movie_stackname}.mrc <Gain-corrected stack (stack)>" >> LOGS/${scriptname}.results
endif
#
echo "<<@progress: 20>>"
#
if ( ${import_rawstack_type} == "2" ) then
  if ( ! -e ${import_gaincorrectedstack} ) then
    ${proc_2dx}/protest "ERROR: Gain-corrected stack ${import_gaincorrectedstack} not found."
  endif
  echo "::Raw movie as gain-corrected stack present."
  #
  #################################################################################
  ${proc_2dx}/linblock "Running: clip unpack ${import_rawstack} ${movie_stackname}.mrc"
  #################################################################################
  #
  echo "# IMAGE-IMPORTANT: ${import_rawstack} <Raw, dark-sub. stack (stack)>" >> LOGS/${scriptname}.results
  echo "<<@evaluate>>"
  #
  clip unpack ${import_rawstack} ${movie_stackname}.mrc
  #
  set movie_stackname = ${import_gaincorrectedstack}
  echo "set movie_stackname = ${movie_stackname}"  >> LOGS/${scriptname}.results
  echo "# IMAGE-IMPORTANT: ${movie_stackname}.mrc <Gain-corrected stack (stack)>" >> LOGS/${scriptname}.results
endif
#
if ( ${import_rawstack_type} == "1" || ${import_rawstack_type} == "2" ) then
  echo "::Gain-corrected stack is ${movie_stackname}.mrc"
  set nonmaskimagename = ${namestub}
  echo "set imagename = ${nonmaskimagename}"  >> LOGS/${scriptname}.results
  echo "set nonmaskimagename = ${nonmaskimagename}"  >> LOGS/${scriptname}.results
  #
  set sample_pixel = `clip info ${movie_stackname}.mrc | grep Scale | cut -d\( -f2 | cut -dx -f1`
  echo "set sample_pixel = ${sample_pixel}"  >> LOGS/${scriptname}.results
  #
  set movie_imagenumber_total = `clip info ${movie_stackname}.mrc | grep "Image size"  | cut -d\, -f3 | cut -d\) -f1`
  echo "set movie_imagenumber_total = ${movie_imagenumber_total}" >> LOGS/${scriptname}.results
  #
else
  #
  set sample_pixel = `clip info ${import_gaincorrectedstack_2d}.mrc | grep Scale | cut -d\( -f2 | cut -dx -f1`
  echo "set sample_pixel = ${sample_pixel}"  >> LOGS/${scriptname}.results
  #
endif
#
if ( ${Calc_from_sample_pixel} == "y" ) then
  set magnification = `echo "scale=3; ${stepdigitizer} * 10000 / ${sample_pixel}" | bc ` 
  echo "set magnification = ${magnification}"  >> LOGS/${scriptname}.results
endif
#
echo "<<@progress: 30>>"
#
if ( ${import_produce_gainref2D} == "y" ) then
  #################################################################################
  ${proc_2dx}/linblock "Running: avgstack on ${import_gaincorrectedstack}.mrc"
  #################################################################################
  #
  avgstack << eot
${import_gaincorrectedstack}.mrc
${import_gaincorrectedstack_2d}.mrc
/
eot
  set nonmaskimagename = ${import_gaincorrectedstack_2d}
  echo "# IMAGE-IMPORTANT: ${nonmaskimagename}.mrc <Gain-corrected average image (2D)>" >> LOGS/${scriptname}.results
endif
#
echo "<<@progress: 50>>"
echo "<<@evaluate>>"
#
if ( ${crop_histogram} == "y" ) then
  set val_avg = `clip stats ${import_gaincorrectedstack_2d}.mrc | head -n 3 | tail -n 1 | cut -d\)  -f3 | awk '{print $1}'`
  set val_stddev = `clip stats ${import_gaincorrectedstack_2d}.mrc | head -n 3 | tail -n 1 | cut -d\)  -f3 | awk '{print $2}'`
  set newmin = `echo "scale=3; ${val_avg} - ${val_stddev} * ${crop_histogram_stdev}" | bc ` 
  set newmax = `echo "scale=3; ${val_avg} + ${val_stddev} * ${crop_histogram_stdev}" | bc ` 
  echo ":Statistics on 2D images are:  Average = ${val_avg}, StdDev = ${val_stddev}"
  #################################################################################
  ${proc_2dx}/linblock "Truncating histogram of 2D average to ${newmin} ... ${newmax}"
  #################################################################################
  #
  clip truncate -l ${newmin} -h ${newmax} ${import_gaincorrectedstack_2d}.mrc ${import_gaincorrectedstack_2d}_trunc.mrc
  \mv -f ${import_gaincorrectedstack_2d}_trunc.mrc ${import_gaincorrectedstack_2d}.mrc
endif
#
if ( ${import_produce_gainref2D} == "y" && ${import_produce_gainref2Dfft} == "y" ) then
  echo "::Running: clip fft ${import_gaincorrectedstack_2d}.mrc ${import_gaincorrectedstack_2d_fft}.mrc"
  clip fft ${import_gaincorrectedstack_2d}.mrc ${import_gaincorrectedstack_2d_fft}.mrc
  echo "# IMAGE-IMPORTANT: ${import_gaincorrectedstack_2d_fft}.mrc <Gain-corrected average image FFT (2D)>" >> LOGS/${scriptname}.results
endif
#
##########################################################################
${proc_2dx}/linblock "${scriptname} - normal end."
##########################################################################
#
echo "<<@progress: 100>>"
echo "<<@evaluate>>"
#
exit
#
