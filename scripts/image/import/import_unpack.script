#!/bin/csh -fe
####
#
#############################################################################
#                                                                           #
# Title: Unpack Stack                                                       #
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 03/21/2011                                             #
# Last Modification: 03/21/2011                                             #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 10
#
# MANUAL: <B>Welcome to the File Importer</B>
#
# DISPLAY: imagename_original
# DISPLAY: imagenumber
# DISPLAY: tempkeep
# DISPLAY: comment
# DISPLAY: crop_histogram
# DISPLAY: crop_histogram_stdev
# DISPLAY: import_rawstack
# DISPLAY: import_rawstack_original
# DISPLAY: import_rawstack_type
# DISPLAY: import_gainref
# DISPLAY: import_gainref_original
# DISPLAY: raw_gaincorrectedstack
# DISPLAY: magnification
# DISPLAY: stepdigitizer
# DISPLAY: Calc_from_sample_pixel
# DISPLAY: sample_pixel
# DISPLAY: movie_imagenumber_total
# DISPLAY: import_bin_doit
# DISPLAY: import_remove_original
# DISPLAY: SERIALEM_FACTOR
# DISPLAY: SERIALEM_DEFAULT_FACTOR
# DISPLAY: frame_dose
# DISPLAY: total_dose
# DISPLAY: status_folder
# DISPLAY: status_folder_update
#
#$end_local_vars
#
# Static directory variables at disposition are:
# appDir_2dx
# scripts-standard_2dx
# scripts-custom_2dx
#
set bin_2dx = ""
set proc_2dx = ""
set SCRATCH_DISK = ""
set app_2dx_mrc_converter = ""
#
# Variables to be available from the config file are:
set tempkeep = ""
set imagename = ""
set nonmaskimagename = ""
set crop_histogram = ""
set crop_histogram_stdev = ""
set movie_stackname = ""
set import_rawstack = ""
set import_rawstack_type = ""
set import_gainref = ""
set raw_gaincorrectedstack = ""
set magnification = ""
set stepdigitizer = ""
set Calc_from_sample_pixel = ""
set sample_pixel = ""
set movie_imagenumber_total = ""
set import_bin_doit = ""
set import_rawstack_original = ""
set import_remove_original = ""
set status_folder = ""
set SERIALEM_FACTOR = ""
set SERIALEM_DEFAULT_FACTOR = ""
set status_folder_update = ""
set import_original_time = ""
#
#$end_vars
#
set scriptname = import_unpack
\rm -f LOGS/${scriptname}.results
#
set ccp4_setup = 'y'
source ${proc_2dx}/initialize
#
source ${proc_2dx}/2dx_makedirs
#
set import_produce_gainref2D = "y"
set import_produce_gainref2Dfft = "y"
#
set namestub = `echo ${import_rawstack} | sed -e 's/\.mrc//g' -e 's/\.tif//g' | sed -e 's/\./_/g' -e 's/\,/_/g' -e 's/ /_/g' -e's/:/_/g' -e's/#/_/g' | tr 'A-Z' 'a-z'`
if ( ${import_rawstack_type} == "1" ) then
  set raw_gaincorrectedstack = ${namestub}_raw
endif
#
echo "<<@progress: 10>>"
#
if(${import_original_time} == "-" || ${import_original_time} == "") then
  @ status_date = `date +%s` * 1000
  set date_text = "Processed at "`echo ${status_date} | awk '{ s = $1 / 1000 } END { print s }' | gawk '{print strftime("%c", $0)}' `
else
  set status_date = ${import_original_time}
  set date_text = "Recorded at "`echo ${status_date} | awk '{ s = $1 / 1000 } END { print s }' | gawk '{print strftime("%c", $0)}' `
endif
#
if ( ! -e ${import_rawstack} ) then
  if ( -e ${import_rawstack_original} ) then
    rsync -auvP ${import_rawstack_original} .
  endif
endif
if ( ${import_remove_original} == "y" ) then
  if ( -e ${import_rawstack} ) then
    if ( -e ${import_rawstack_original} ) then
      if ( ${import_rawstack} != ${import_rawstack_original} ) then
        ${proc_2dx}/linblock "REMOVING ${import_rawstack_original}"
        \rm ${import_rawstack_original}
      endif
    endif
  endif
endif
#
if ( ${import_rawstack_type} == "1" ) then
  if ( ! -e ${import_rawstack} ) then
    ${proc_2dx}/protest "ERROR: Raw stack ${import_rawstack} not found."
  endif    
  if ( ! -e ${import_gainref} ) then
    ${proc_2dx}/protest "ERROR: Gain reference ${import_gainref} not found."
  endif
  echo "# IMAGE-IMPORTANT: ${import_rawstack} <Raw, dark-sub. stack (stack)>" >> LOGS/${scriptname}.results
  echo "# IMAGE-IMPORTANT: ${import_gainref} <Gain reference (2D)>" >> LOGS/${scriptname}.results
  echo "<<@evaluate>>"
  echo "::Raw movie as dark-subtracted stack present. Gain reference found."
  #
  set import_rawstack_end = `echo ${import_rawstack} | rev | cut -c1-4 | rev`
  if ( ${import_rawstack_end} == "mrcs" ) then
    set SERIALEM_FACTOR = 1.0
  else if ( ${import_rawstack_end} == ".mrc" ) then
    set SERIALEM_FACTOR = 1.0
  else if ( ${import_rawstack_end} == ".tif" ) then
    set SERIALEM_FACTOR = ${SERIALEM_DEFAULT_FACTOR}
  else
    ${proc_2dx}/protest "ERROR: file format ${import_rawstack_end} not supported."
  endif
  #################################################################################
  ${proc_2dx}/linblock "Running clip unpack ${import_rawstack} ${import_gainref} ${raw_gaincorrectedstack}.mrcs"
  #################################################################################
  #
  clip unpack ${import_rawstack} ${import_gainref} ${raw_gaincorrectedstack}.mrcs
  #
  echo "set raw_gaincorrectedstack = ${raw_gaincorrectedstack}"  >> LOGS/${scriptname}.results
  echo "# IMAGE-IMPORTANT: ${raw_gaincorrectedstack}.mrcs <Gain-corrected stack (stack)>" >> LOGS/${scriptname}.results
endif
#
echo "<<@progress: 20>>"
#
if ( ${import_rawstack_type} == "2" ) then
  if ( -e ${raw_gaincorrectedstack}.mrcs ) then
    set SERIALEM_FACTOR = 1.0
    echo "::Raw movie as gain-corrected stack is present as MRCS file."
  else if ( -e ${raw_gaincorrectedstack}.mrc ) then
    set SERIALEM_FACTOR = 1.0
    \mv -f ${raw_gaincorrectedstack}.mrc ${raw_gaincorrectedstack}.mrcs
    echo "::Raw movie as gain-corrected stack is present as MRC file. Now renamed to MRCS."
  else if ( -e ${raw_gaincorrectedstack}.tif ) then
    set SERIALEM_FACTOR = ${SERIALEM_DEFAULT_FACTOR}
    #
    #################################################################################
    ${proc_2dx}/linblock "Running: clip unpack ${import_rawstack} ${raw_gaincorrectedstack}.mrcs"
    #################################################################################
    #
    clip unpack ${raw_gaincorrectedstack}.tif ${raw_gaincorrectedstack}.mrcs
    #
  else
    #################################################################################
    ${proc_2dx}/protest "${raw_gaincorrectedstack}.mrcs not found, also not at mrc or tif."
    #################################################################################
    #
  endif
  echo "set raw_gaincorrectedstack = ${raw_gaincorrectedstack}"  >> LOGS/${scriptname}.results
  echo "# IMAGE-IMPORTANT: ${raw_gaincorrectedstack}.mrcs <Gain-corrected stack (stack)>" >> LOGS/${scriptname}.results
endif
#
if ( ${import_rawstack_type} == "1" || ${import_rawstack_type} == "2" ) then
  echo "::Gain-corrected stack is ${raw_gaincorrectedstack}.mrcs"
  set nonmaskimagename = ${namestub}
  echo "set imagename = ${nonmaskimagename}"  >> LOGS/${scriptname}.results
  echo "set nonmaskimagename = ${nonmaskimagename}"  >> LOGS/${scriptname}.results
  #
  set sample_pixel = `clip info ${raw_gaincorrectedstack}.mrcs | grep Scale | cut -d\( -f2 | cut -dx -f1`
  echo "set sample_pixel = ${sample_pixel}"  >> LOGS/${scriptname}.results
  #
  set movie_imagenumber_total = `clip info ${raw_gaincorrectedstack}.mrcs | grep "Image size"  | cut -d\, -f3 | cut -d\) -f1`
  echo "set movie_imagenumber_total = ${movie_imagenumber_total}" >> LOGS/${scriptname}.results
  #
else
  #
  set SERIALEM_FACTOR = ${SERIALEM_DEFAULT_FACTOR}
  set sample_pixel = `clip info ${raw_gaincorrectedstack}.mrcs | grep Scale | cut -d\( -f2 | cut -dx -f1`
  echo "set sample_pixel = ${sample_pixel}"  >> LOGS/${scriptname}.results
  #
endif
#
if ( ${Calc_from_sample_pixel} == "y" ) then
  set magnification = `echo "scale=3; ${stepdigitizer} * 10000 / ${sample_pixel}" | bc ` 
  echo "set magnification = ${magnification}"  >> LOGS/${scriptname}.results
endif
#
if ( ${import_bin_doit} == "y" ) then
  set width = `clip info ${raw_gaincorrectedstack}.mrcs | grep size | cut -d\( -f2 | cut -d\, -f1`
  set widthbig = `echo ${width} 4096 | awk '{ if ( $1 > $2 ) { s = 1 } else { s = 0 } } END { print s } '`
  if ( ${widthbig} == "1" ) then
    echo ":: Image has size ${width}, which is too large."
    #################################################################################
    ${proc_2dx}/linblock "Running: newstack -ftreduce 2 -input ${raw_gaincorrectedstack}_large.mrcs -output ${raw_gaincorrectedstack}.mrcs"
    #################################################################################
    #
    \mv -f ${raw_gaincorrectedstack}.mrcs ${raw_gaincorrectedstack}_large.mrcs
    echo "# IMAGE: ${raw_gaincorrectedstack}_large.mrcs <Gain-corrected stack non-binned (stack)>" >> LOGS/${scriptname}.results
    newstack -ftreduce 2 -mode 2 -input ${raw_gaincorrectedstack}_large.mrcs -output ${raw_gaincorrectedstack}.mrcs 
    #
    if ( ${tempkeep} == "n" ) then
      \rm -f ${raw_gaincorrectedstack}_large.mrcs
    endif
    set sample_pixel = `echo ${sample_pixel} | awk '{ s = 2 * $1 } END { print s }'`
    echo "set sample_pixel = ${sample_pixel}"  >> LOGS/${scriptname}.results
    #
    echo "::WARNING: SERIALEM_FACTOR is reduced by 4, to account for 2x2 Fourier cropping effect on mean dose per pixel."
    set SERIALEM_FACTOR = `echo ${SERIALEM_FACTOR} | awk '{ s = $1 / 4.0 } END { print s }'`
  else
    echo ":: Image has size ${width}, which is small enough, no binning done."
  endif
  #
endif
#
source ${proc_2dx}/2dx_calc_framedose_sub.com ${raw_gaincorrectedstack}.mrcs ${sample_pixel} ${SERIALEM_FACTOR}
echo "set frame_dose = ${frame_dose}" >> LOGS/${scriptname}.results
echo "set total_dose = ${total_dose}" >> LOGS/${scriptname}.results
#
echo "<<@progress: 30>>"
#
if ( ${import_produce_gainref2D} == "y" ) then
  #################################################################################
  ${proc_2dx}/linblock "Running: avgstack on ${raw_gaincorrectedstack}.mrcs"
  #################################################################################
  #
  avgstack << eot
${raw_gaincorrectedstack}.mrcs
${raw_gaincorrectedstack}.mrc
/
eot
  echo "# IMAGE-IMPORTANT: ${raw_gaincorrectedstack}.mrc <Gain-corrected average image (2D)>" >> LOGS/${scriptname}.results
endif
#
echo "<<@progress: 50>>"
echo "<<@evaluate>>"
#
if ( ${crop_histogram} == "y" ) then
  set val_avg = `clip stats ${raw_gaincorrectedstack}.mrc | head -n 3 | tail -n 1 | cut -d\)  -f3 | awk '{print $1}'`
  set val_stddev = `clip stats ${raw_gaincorrectedstack}.mrc | head -n 3 | tail -n 1 | cut -d\)  -f3 | awk '{print $2}'`
  set newmin = `echo "scale=3; ${val_avg} - ${val_stddev} * ${crop_histogram_stdev}" | bc ` 
  set newmax = `echo "scale=3; ${val_avg} + ${val_stddev} * ${crop_histogram_stdev}" | bc ` 
  echo ":Statistics on 2D images are:  Average = ${val_avg}, StdDev = ${val_stddev}"
  #################################################################################
  ${proc_2dx}/linblock "Truncating histogram of 2D average to ${newmin} ... ${newmax}"
  #################################################################################
  #
  clip truncate -l ${newmin} -h ${newmax} ${raw_gaincorrectedstack}.mrc ${raw_gaincorrectedstack}_trunc.mrc
  \mv -f ${raw_gaincorrectedstack}_trunc.mrc ${raw_gaincorrectedstack}.mrc
endif
#
\rm -f tmp.png
\rm -f tmp2.png
\rm -f SCRATCH/1-image.jpg
${app_2dx_mrc_converter} --size 300 ${raw_gaincorrectedstack}.mrc tmp.png 
${app_python} ${proc_2dx}/PNGannotator.py tmp.png tmp2.png 10 250 "Raw average"
${app_python} ${proc_2dx}/PNGannotator.py tmp2.png ${raw_gaincorrectedstack}.mrc.png 10 265 "${date_text}"
${app_python} ${proc_2dx}/PNGannotator.py tmp2.png SCRATCH/1-image.jpg 10 265 "${date_text}"
\rm -f tmp.png 
\rm -f tmp2.png
#
if ( ${import_produce_gainref2D} == "y" && ${import_produce_gainref2Dfft} == "y" ) then
  echo "::Running: clip fft ${raw_gaincorrectedstack}.mrc ${raw_gaincorrectedstack}_fft.mrc"
  clip fft ${raw_gaincorrectedstack}.mrc ${raw_gaincorrectedstack}_fft.mrc
  echo "# IMAGE-IMPORTANT: ${raw_gaincorrectedstack}_fft.mrc <Gain-corrected average image FFT (2D)>" >> LOGS/${scriptname}.results
  \rm -f tmp.png
  \rm -f tmp2.png
  \rm -f SCRATCH/1-FFT.jpg
  ${app_2dx_mrc_converter} --size 400 ${raw_gaincorrectedstack}_fft.mrc tmp.png
  ${app_python} ${proc_2dx}/PNGannotator.py tmp.png tmp2.png 10 350 "FFT of raw average"
  ${app_python} ${proc_2dx}/PNGannotator.py tmp2.png ${raw_gaincorrectedstack}_fft.mrc.png 10 365 "${date_text}"
  ${app_python} ${proc_2dx}/PNGannotator.py tmp2.png SCRATCH/1-FFT.jpg 10 365 "${date_text}"
  \rm -f tmp.png
  \rm -f tmp2.png
endif
#
echo "set SERIALEM_FACTOR = ${SERIALEM_FACTOR}"  >> LOGS/${scriptname}.results
#
##########################################################################
${proc_2dx}/linblock "${scriptname} - normal end."
##########################################################################
#
echo "<<@progress: 100>>"
echo "<<@evaluate>>"
#
exit
#
