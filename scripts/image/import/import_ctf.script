#!/bin/csh -ef
#############################################################################
#                                                                           #
# Title: CTF Measurement                                                    #
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 09/39/2014                                             #
# Last Modification: 03/08/2015	                                            #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 30
#
# MANUAL: This script measures the CTF of the recorded image.
#
# DISPLAY: imagenumber
# DISPLAY: comment
# DISPLAY: RESMAX
# DISPLAY: defocus
# DISPLAY: phacon
# DISPLAY: magnification
# DISPLAY: stepdigitizer
# DISPLAY: CS
# DISPLAY: KV
# DISPLAY: Thread_Number
# DISPLAY: DEFOCUS_TLTAXIS
# DISPLAY: DEFOCUS_TLTANG
# DISPLAY: sample_pixel
# DISPLAY: phacon
# DISPLAY: movie_stackname
# DISPLAY: gctf_RESMAX
# DISPLAY: df_start
# DISPLAY: df_end
# DISPLAY: df_step
# DISPLAY: defocus_res_min
# DISPLAY: defocus_res_max
#
#$end_local_vars
#
set bin_2dx = ""
set proc_2dx = ""
set SCRATCH_DISK = ""
set app_2dx_mrc_converter = ""
#
set SYN_Unbending = ""
set PHASEORI_done = ""
#
set tempkeep = ""
set imagename = ""
set nonmaskimagename = ""
set imagenumber = ""
set imagesidelength = ""
set realcell = ""
set magnification = ""
set stepdigitizer = ""
set Calc_from_sample_pixel = ""
set sample_pixel = ""
set realang = ""
set phacon = ""
set RESMIN = ""
set RESMAX = ""
set RADLIM = ""
set CS = ""
set KV = ""
set TLTAXIS = ""
set TLTANG = ""
set defocus = ""
set ctfcor_noise = ""
set ctfcor_imode = ""
set ctfcor_debug = ""
set phacon = ""
set movie_stackname = ""
set gctf_RESMAX = ""
set df_start = ""
set df_end = ""
set df_step = ""
set defocus_res_min = ""
set defocus_res_max = ""
#
#$end_vars
#
set scriptname = import_ctf
\rm -f LOGS/${scriptname}.results
#
source ${proc_2dx}/initialize
#
echo "<<@progress: 5>>"
#
set ampcon = ` echo "scale=3; sqrt( 1 - ${phacon} * ${phacon} )" | bc `
#
if ( ! -e ${movie_stackname}.mrc ) then
  ${proc_2dx}/protest "ERROR: ${movie_stackname}.mrc does not exist."
endif
#
##########################################################################
${proc_2dx}/linblock "Calling gctf"
##########################################################################
#
echo ":: "
echo "::Running: gctf --apix ${sample_pixel} --kv ${KV} --cs ${CS} --AC ${ampcon} --defL ${df_start} --defH ${df_end} --defS ${df_step} --astm 500 --bfac 50 --resL ${defocus_res_min} --resH ${defocus_res_max} --boxsize 512 ${movie_stackname}.mrc"
echo ":: "
#
${app_gctf} --apix ${sample_pixel} --kv ${KV} --cs ${CS} --AC ${ampcon} --defL ${df_start} --defH ${df_end} --defS ${df_step} --astm 500 --bfac 50 --resL ${defocus_res_min} --resH ${defocus_res_max} --boxsize 512 ${movie_stackname}.mrc
#
\mv -f ${movie_stackname}.ctf CTFDiag.mrc
${app_2dx_mrc_converter} --size 400 CTFDiag.mrc CTFDiag.mrc.png
echo "#IMAGE-IMPORTANT: CTFDiag.mrc <Thon Ring Fit (MRC)>" >> LOGS/${scriptname}.results
echo "#IMAGE-IMPORTANT: CTFDiag.png <Thon Ring Fit (PNG)>" >> LOGS/${scriptname}.results
echo "#IMAGE: ${movie_stackname}_EPA.log <CTF data (LOG)>" >> LOGS/${scriptname}.results
echo "#IMAGE: micrographs_all_gctf.star <GCTF star file (TXT)>" >> LOGS/${scriptname}.results
#
cat ${movie_stackname}_gctf.log
#
echo `tail -n 2 micrographs_all_gctf.star | head -n 1 ` | cut -d\  -f3-5 | sed 's/ /,/g' > tmp.1
set defocus = `cat tmp.1`
\rm tmp.1
echo "set defocus = ${defocus}" >> LOGS/${scriptname}.results
#
echo `tail -n 2 micrographs_all_gctf.star | head -n 1 ` | cut -d\  -f12 | sed 's/ /,/g' > tmp.1
set gctf_RESMAX = `cat tmp.1`
\rm tmp.1
echo "set gctf_RESMAX = ${gctf_RESMAX}" >> LOGS/${scriptname}.results
#
##########################################################################
${proc_2dx}/linblock "Plotting CTF"
##########################################################################
#
\rm -f ${movie_stackname}_EPA.png
${app_python} ${proc_2dx}/CTF_plotter.py ${movie_stackname}_EPA.log ${movie_stackname}_EPA.png
#
# cat > gnuplot.script << eot 
# set xlabel "Resolution [A, ResMax = ${defocus_res_max}A]"
# set ylabel "|CTFsim|"
# set ylabel "EPA(Ln|F|)"
# set title "gctf plot"
# set xrange [100:${defocus_res_max}] reverse
# set logscale x
# set size square
# set term png; set output "${movie_stackname}_EPA.png"
# plot 'movie_aligned_EPA.log' using 1:2 with lines title "CTFsim", '' using 1:4 with lines title "EPA(Ln|F|)"
# eot
# gnuplot gnuplot.script
# ${app_gnuplot} gnuplot.script
# \rm gnuplot.script
#
echo "#IMAGE: ${movie_stackname}_EPA.png <GCTF plot (PNG)>" >> LOGS/${scriptname}.results
#
echo "<<@progress: 100>>"
echo "<<@evaluate>>"
#
##########################################################################
${proc_2dx}/linblock "${scriptname} - normal end."
##########################################################################
#
