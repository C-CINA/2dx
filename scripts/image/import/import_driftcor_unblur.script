#!/bin/csh -ef
####
#
#############################################################################
#                                                                           #
# Title: Drift-Correct w/ Unblur                                            #
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 07/21/2016                                             #
# Last Modification: 07/21/2016                                             #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 23 
#
# MANUAL: This script runs a drift correction program on a movie file, to produce a drift-corrected movie and to produce a drift-corrected and averaged image file.
#
# DISPLAY: imagenumber
# DISPLAY: imagename_original
# DISPLAY: comment
# DISPLAY: sample_pixel
# DISPLAY: movie_imagenumber_total
# DISPLAY: raw_gaincorrectedstack
#
#$end_local_vars
#
set bin_2dx = ""
set proc_2dx = ""
set SCRATCH_DISK = ""
set app_2dx_mrc_converter = ""
#
set tempkeep = ""
set imagename = ""
set nonmaskimagename = ""
set imagenumber = ""
set imagesidelength = ""
set sample_pixel = ""
set movie_stackname = ""
set movie_imagenumber_total = ""
set import_rawstack = ""
set raw_gaincorrectedstack = ""
#
#$end_vars
#
set scriptname = import_driftcor_unblur
\rm -f LOGS/${scriptname}.results
#
set noEMAN = 'y'
source ${proc_2dx}/initialize
#
source ${proc_2dx}/2dx_makedirs
#
echo "<<@evaluate>>"
#
echo "<<@progress: 1>>"
#
if ( ! -e ${app_unblur} ) then
  ${proc_2dx}/protest "ERROR: First define location of UNBLUR in Settings"
endif
#
set COUNTS_PER_PIX = ` clip info ${import_rawstack} | grep mean | cut -d\= -f2 `
echo "::Mean count is: ${COUNTS_PER_PIX} electrons/pixel" 
# set SERIALEM_FACTOR = ` header ${import_rawstack} | grep 'SerialEMCCD' | awk '{print $7}' `
set SERIALEM_FACTOR = 1
set frame_dose = ` echo "scale=3; ${COUNTS_PER_PIX} / ${sample_pixel} / ${sample_pixel} / ${SERIALEM_FACTOR}" | bc `
echo "::Calculated frame dose is: ${frame_dose} electrons/A2/frame" 
set total_dose = ` echo "scale=3; ${frame_dose} * ${movie_imagenumber_total} " | bc `
echo "::Calculated total dose is: ${total_dose} electrons/A2" 
#
if ( ${movie_stackname} == "ScriptWillPutNameHere" ) then
  set movie_stackname = movie_aligned
  echo "set movie_stackname = ${movie_stackname}" >> LOGS/${scriptname}.results
endif
#
echo "# IMAGE-IMPORTANT: ${raw_gaincorrectedstack}.mrc <Gain-corrected average image (2D)>" >> LOGS/${scriptname}.results
echo "# IMAGE-IMPORTANT: ${raw_gaincorrectedstack}_fft.mrc <Gain-corrected average image FFT (2D)>" >> LOGS/${scriptname}.results
#
##########################################################################
${proc_2dx}/linblock "Calling unblur..."
##########################################################################
#
\rm -f outdummy.mrc
\rm -f dummy.mrc
\ln -s ${raw_gaincorrectedstack}.mrcs dummy.mrc
\rm -f ${movie_stackname}.mrc
#
${app_unblur} << eof 
dummy.mrc
${movie_imagenumber_total}
${movie_stackname}.mrc
${imagename}_unblur_shifts.txt
${sample_pixel}
YES
${frame_dose}
300
0
YES
outdummy.mrc
NO
eof
#
\rm -f dummy.mrc
\mv -f outdummy.mrc ${movie_stackname}.mrcs
#
echo "# IMAGE-IMPORTANT: ${raw_gaincorrectedstack}.mrcs <Raw movie (stack)>" >> LOGS/${scriptname}.results
echo "# IMAGE-IMPORTANT: ${movie_stackname}.mrcs <Drift-corrected movie (stack)>" >> LOGS/${scriptname}.results
echo "# IMAGE-IMPORTANT: ${imagename}_unblur_shifts.txt <Unblur determined shifts (TXT)>" >> LOGS/${scriptname}.results
echo "# IMAGE-IMPORTANT: ${movie_stackname}.mrc <Drift-corrected average image (2D)>" >> LOGS/${scriptname}.results
#
${app_2dx_mrc_converter} --size 400 ${movie_stackname}.mrc ${movie_stackname}.mrc.png 
#
##########################################################################
echo "::Running ${proc_2dx}/unblur_plotter.py ${imagename}_unblur_shifts.txt translations.png"
##########################################################################
#
\rm -f translations.png
${app_python}  ${proc_2dx}/unblur_plotter.py ${imagename}_unblur_shifts.txt translations.png
#
echo "# IMAGE-IMPORTANT: translations.png <drift plot (PNG)>" >> LOGS/${scriptname}.results
#
echo "<<@progress: 50>>"
echo "<<@evaluate>>"
#
##########################################################################
echo "::Running: clip fft ${movie_stackname}.mrc ${movie_stackname}_fft.mrc"
##########################################################################
#
\rm -f ${movie_stackname}_fft.mrc
clip fft ${movie_stackname}.mrc ${movie_stackname}_fft.mrc
echo "# IMAGE-IMPORTANT: ${movie_stackname}_fft.mrc <Drift-corrected average image FFT (2D)>" >> LOGS/${scriptname}.results
${app_2dx_mrc_converter} --size 400 ${movie_stackname}_fft.mrc ${movie_stackname}_fft.mrc.png 
#
##########################################################################
${proc_2dx}/linblock "${scriptname} - normal end."
##########################################################################
#
echo "<<@progress: 100>>"
echo "<<@evaluate>>"
exit
#
# These are listed here to make sure they appear in the 2dx_image GUI:
#
