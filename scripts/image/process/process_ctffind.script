#!/bin/csh -f
#############################################################################
#                                                                           #
# Title: ctffind4.1 (on stack)                                              #
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 09/39/2014                                             #
# Last Modification: 03/08/2015	                                            #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 35
#
# MANUAL: This script measures the CTF of the recorded image, using CTFFIND4
#
# DISPLAY: imagenumber
# DISPLAY: comment
# DISPLAY: defocus
# DISPLAY: phacon
# DISPLAY: CS
# DISPLAY: KV
# DISPLAY: DEFOCUS_TLTAXIS
# DISPLAY: DEFOCUS_TLTANG
# DISPLAY: sample_pixel
# DISPLAY: phacon
# DISPLAY: gctf_RESMAX
# DISPLAY: gctf_defocus
# DISPLAY: defocus
# DISPLAY: df_start
# DISPLAY: df_end
# DISPLAY: df_step
# DISPLAY: defocus_res_min
# DISPLAY: defocus_res_max
#
#$end_local_vars
#
set bin_2dx = ""
set proc_2dx = ""
set app_2dx_mrc_converter = ""
#
set tempkeep = ""
set imagename = ""
set nonmaskimagename = ""
set imagenumber = ""
set imagesidelength = ""
set magnification = ""
set stepdigitizer = ""
set Calc_from_sample_pixel = ""
set sample_pixel = ""
set phacon = ""
set RESMIN = ""
set RESMAX = ""
set RADLIM = ""
set CS = ""
set KV = ""
set defocus = ""
set gctf_defocus = ""
set phacon = ""
set movie_stackname = ""
set gctf_RESMAX = ""
set df_start = ""
set df_end = ""
set df_step = ""
set defocus_res_min = ""
set defocus_res_max = ""
set import_original_time = ""
#
#$end_vars
#
set scriptname = process_ctffind
\rm -f LOGS/${scriptname}.results
#
source ${proc_2dx}/initialize
#
echo "<<@progress: 5>>"
#
if(${import_original_time} == "-" || ${import_original_time} == "") then
  @ status_date = `date +%s` * 1000
  set date_text = "Processed at "`echo ${status_date} | awk ' { s = $1 / 1000 } END { print s } ' |gawk '{print strftime("%c", $0)}' `
else
  set status_date = ${import_original_time}
  set date_text = "Recorded at "`echo ${status_date} | awk ' { s = $1 / 1000 } END { print s } ' |gawk '{print strftime("%c", $0)}' `
endif
#
set defocus_wrong = `echo ${defocus_res_min} 30.0 | awk '{ if ( $1 > $2 ) { s = 1 } else { s = 0 } } END { print s } '`
if ( ${defocus_wrong} == "1" ) then
  set defocus_res_min = "30.0"
  ${proc_2dx}/linblock "WARNING: correcting defocus_res_min to ${defocus_res_min}" 
  echo "set defocus_res_min = ${defocus_res_min}" >> LOGS/${scriptname}.results
endif
set ampcon = ` echo "scale=3; sqrt( 1 - ${phacon} * ${phacon} )" | bc `
#
set input_image = ${movie_stackname}
#
if ( ${CS} == "ScriptWillPutNumberHere" ) then
  set CS = ${Default_CS}
  echo "set CS = ${CS}" >> LOGS/${scriptname}.results
endif
#
if ( ${KV} == "ScriptWillPutNumberHere" ) then
  set KV = ${Default_KV}
  echo "set KV = ${KV}" >> LOGS/${scriptname}.results
endif
#
if ( ! -e ${input_image}.mrc ) then
  ${proc_2dx}/protest "ERROR: ${input_image}.mrc does not exist."
endif
#
if ( -e ${movie_stackname}_Sum.mrc ) then
  echo "# IMAGE-IMPORTANT: ${movie_stackname}.mrcs <DriftCor stack>" >> LOGS/${scriptname}.results
  echo "# IMAGE-IMPORTANT: ${movie_stackname}_Sum.mrc <DriftCor image (2D, no DW)>" >> LOGS/${scriptname}.results
  echo "# IMAGE-IMPORTANT: ${movie_stackname}_Sum_fft.mrc <DriftCor image FFT (2D, no DW)>" >> LOGS/${scriptname}.results
  echo "# IMAGE: ${movie_stackname}.mrc <DriftCor image (2D, with DW)>" >> LOGS/${scriptname}.results
  echo "# IMAGE: ${movie_stackname}_fft.mrc <DriftCor image FFT (2D, with DW)>" >> LOGS/${scriptname}.results
else
  echo "# IMAGE-IMPORTANT: ${movie_stackname}.mrc <DriftCor image (2D, with DW)>" >> LOGS/${scriptname}.results
  echo "# IMAGE-IMPORTANT: ${movie_stackname}_fft.mrc <DriftCor image FFT (2D, with DW)>" >> LOGS/${scriptname}.results
endif
#
#
##########################################################################
${proc_2dx}/linblock "Calling CTFFIND4.1"
##########################################################################
#
echo ":: "
echo "::Running:"
echo ":: "
echo "::"${app_ctffind} \<\<eot 
echo "::"${movie_stackname}.mrcs
echo "::"yes
echo "::"4
echo "::"diagnostic_output.mrc
echo "::"${sample_pixel}
echo "::"${KV}
echo "::"${CS}
echo "::"${ampcon}
echo "::"1024
echo "::"${defocus_res_min}
echo "::"${defocus_res_max}
echo "::"${df_start}
echo "::"${df_end} 
echo "::"${df_step}
echo "::"no
echo "::"no
echo "::"yes
echo "::"200.0
echo "::"no
echo "::"no
echo "::"eot
echo ":: "
#
echo "#IMAGE-IMPORTANT: diagnostic_output.txt <Summary of results (TXT)>" >> LOGS/${scriptname}.results
echo "#IMAGE-IMPORTANT: diagnostic_output.mrc <Diagnostic images  (MRC)>" >> LOGS/${scriptname}.results
echo "#IMAGE-IMPORTANT: diagnostic_output_avrot.txt <Detailed results (TXT)>" >> LOGS/${scriptname}.results
#
echo "<<@progress: 20>>"
#
time nohup ${app_ctffind}  << eot 
${movie_stackname}.mrcs
yes
4
diagnostic_output.mrc
${sample_pixel}
${KV}
${CS}
${ampcon}
1024
${defocus_res_min}
${defocus_res_max}
${df_start}
${df_end} 
${df_step}
no
no
yes
200.0
no
no
eot
#
echo `tail -n 1 diagnostic_output.txt` | cut -d\  -f2-4 | sed 's/ /,/g' > tmp.1
set defocus = `cat tmp.1`
echo `tail -n 1 diagnostic_output.txt` | cut -d\  -f5 > tmp.1
set ctffind_phase_shift = `cat tmp.1`
echo `tail -n 1 diagnostic_output.txt` | cut -d\  -f6 > tmp.1
set ctffind_CCvalue = `cat tmp.1`
echo `tail -n 1 diagnostic_output.txt` | cut -d\  -f7 > tmp.1
set gctf_RESMAX = `cat tmp.1`
\rm tmp.1
echo "set defocus = ${defocus}" >> LOGS/${scriptname}.results
echo "set ctffind_phase_shift = ${ctffind_phase_shift}" >> LOGS/${scriptname}.results
echo "set ctffind_CCvalue = ${ctffind_CCvalue}" >> LOGS/${scriptname}.results
echo "set gctf_RESMAX = ${gctf_RESMAX}" >> LOGS/${scriptname}.results
#
echo "::Estimated resolution limit by EPA: ${gctf_RESMAX}"
#
set tmpdef1 = `echo ${defocus} | sed 's/,/ /g' | awk '{ s = $1 } END { print s }'`
set tmpdef2 = `echo ${defocus} | sed 's/,/ /g' | awk '{ s = $2 } END { print s }'`
set gctf_defocus = `echo "scale=3; ( ${tmpdef1} + ${tmpdef2} ) / 20000.0 " | bc `
echo "::Average defocus = ${gctf_defocus} microns"
echo "set gctf_defocus = ${gctf_defocus}" >> LOGS/${scriptname}.results
#
#################################################################################
${proc_2dx}/linblock "Running: labelh.exe to normalize MRC diagnostic image"
#################################################################################
# 
echo "<<@progress: 90>>"
#
\rm -f CTFDiag.mrc
#
time ${bin_2dx}/labelh.exe << eot
diagnostic_output.mrc
42
CTFDiag.mrc
eot
#
echo "#IMAGE-IMPORTANT: CTFDiag.mrc <CTF Diagnostic Plot (MRC)>" >> LOGS/${scriptname}.results
#
echo "<<@progress: 100>>"
echo "<<@evaluate>>"
#
##########################################################################
${proc_2dx}/linblock "${scriptname} - normal end."
##########################################################################
#
exit
#
