#!/bin/csh -ef
#############################################################################
#                                                                           #
# Title: CTF Measurement                                                    #
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 09/39/2014                                             #
# Last Modification: 03/08/2015	                                      #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 30
#
# MANUAL: This script measures the CTF of the recorded image.
#
# DISPLAY: imagenumber
# DISPLAY: comment
# DISPLAY: RESMAX
# DISPLAY: defocus
# DISPLAY: phacon
# DISPLAY: magnification
# DISPLAY: stepdigitizer
# DISPLAY: CS
# DISPLAY: KV
# DISPLAY: Thread_Number
# DISPLAY: DEFOCUS_TLTAXIS
# DISPLAY: DEFOCUS_TLTANG
# DISPLAY: sample_pixel
# DISPLAY: phacon
# DISPLAY: movie_stackname
# DISPLAY: gctf_RESMAX
# DISPLAY: gctf_defocus
# DISPLAY: defocus
# DISPLAY: df_start
# DISPLAY: df_end
# DISPLAY: df_step
# DISPLAY: defocus_res_min
# DISPLAY: defocus_res_max
#
#$end_local_vars
#
set bin_2dx = ""
set proc_2dx = ""
set SCRATCH_DISK = ""
set app_2dx_mrc_converter = ""
#
set SYN_Unbending = ""
set PHASEORI_done = ""
#
set tempkeep = ""
set imagename = ""
set nonmaskimagename = ""
set imagenumber = ""
set imagesidelength = ""
set realcell = ""
set magnification = ""
set stepdigitizer = ""
set Calc_from_sample_pixel = ""
set sample_pixel = ""
set realang = ""
set phacon = ""
set RESMIN = ""
set RESMAX = ""
set RADLIM = ""
set CS = ""
set KV = ""
set TLTAXIS = ""
set TLTANG = ""
set defocus = ""
set gctf_defocus = ""
set ctfcor_noise = ""
set ctfcor_imode = ""
set ctfcor_debug = ""
set phacon = ""
set movie_stackname = ""
set gctf_RESMAX = ""
set df_start = ""
set df_end = ""
set df_step = ""
set defocus_res_min = ""
set defocus_res_max = ""
set status_folder = ""
set status_folder_update = ""
set import_original_time = ""
#
#$end_vars
#
set scriptname = import_ctf
\rm -f LOGS/${scriptname}.results
#
source ${proc_2dx}/initialize
#
echo "<<@progress: 5>>"
#
if(${import_original_time} == "-" || ${import_original_time} == "") then
  @ status_date = `date +%s` * 1000
  set date_text = "Processed at "`echo ${status_date} | awk ' { s = $1 / 1000 } END { print s } ' |gawk '{print strftime("%c", $0)}' `
else
  set status_date = ${import_original_time}
  set date_text = "Recorded at "`echo ${status_date} | awk ' { s = $1 / 1000 } END { print s } ' |gawk '{print strftime("%c", $0)}' `
endif
#
set ampcon = ` echo "scale=3; sqrt( 1 - ${phacon} * ${phacon} )" | bc `
#
set input_image = ${movie_stackname}
#
if ( ! -e ${input_image}.mrc ) then
  ${proc_2dx}/protest "ERROR: ${input_image}.mrc does not exist."
endif
#
if ( -e ${movie_stackname}_Sum.mrc ) then
  set input_image = ${movie_stackname}_Sum
  echo "# IMAGE-IMPORTANT: ${input_image}.mrc <Drift-corrected average image (2D, no DW)>" >> LOGS/${scriptname}.results
endif
#
echo "# IMAGE-IMPORTANT: ${movie_stackname}_Sum.mrc <Drift-corrected average image (2D, no DW)>" >> LOGS/${scriptname}.results
echo "# IMAGE-IMPORTANT: ${movie_stackname}.mrc <Drift-corrected average image (2D, with DW)>" >> LOGS/${scriptname}.results
echo "# IMAGE-IMPORTANT: ${movie_stackname}_fft.mrc <Drift-corrected average image FFT (2D)>" >> LOGS/${scriptname}.results
#
##########################################################################
${proc_2dx}/linblock "Calling gctf"
##########################################################################
#
echo ":: "
echo "::Running:"
echo ":: "
echo ":: "${app_gctf} 
echo ":: "--apix ${sample_pixel} 
echo ":: "--kv ${KV} 
echo ":: "--cs ${CS} 
echo ":: "--AC ${ampcon} 
echo ":: "--defL ${df_start} 
echo ":: "--defH ${df_end} 
echo ":: "--defS ${df_step}
echo ":: "--astm 500 
echo ":: "--bfac 10
echo ":: "--resL ${defocus_res_min}
echo ":: "--resH ${defocus_res_max}
echo ":: "--boxsize 512
echo ":: "${input_image}.mrc
echo ":: "
#
${app_gctf} \
--apix ${sample_pixel} \
--kv ${KV} \
--cs ${CS} \
--AC ${ampcon} \
--defL ${df_start} \
--defH ${df_end} \
--defS ${df_step} \
--astm 500 \
--bfac 10 \
--resL ${defocus_res_min} \
--resH ${defocus_res_max} \
--boxsize 512 \
${input_image}.mrc
#
\mv -f ${input_image}.ctf CTFDiag.mrc
echo "#IMAGE-IMPORTANT: CTFDiag.mrc <Thon Ring Fit (MRC)>" >> LOGS/${scriptname}.results
# \rm -f CTFDiag.png
# ${app_2dx_mrc_converter} CTFDiag.mrc CTFDiag.png
# echo "#IMAGE-IMPORTANT: CTFDiag.png <Thon Ring Fit (PNG)>" >> LOGS/${scriptname}.results
echo "#IMAGE: ${movie_stackname}_EPA.log <CTF data (LOG)>" >> LOGS/${scriptname}.results
echo "#IMAGE: micrographs_all_gctf.star <GCTF star file (TXT)>" >> LOGS/${scriptname}.results
#
cat ${input_image}_gctf.log
#
echo `tail -n 2 micrographs_all_gctf.star | head -n 1 ` | cut -d\  -f3-5 | sed 's/ /,/g' > tmp.1
set defocus = `cat tmp.1`
\rm tmp.1
echo "set defocus = ${defocus}" >> LOGS/${scriptname}.results
#
set tmpdef1 = `echo ${defocus} | sed 's/,/ /g' | awk '{ s = $1 } END { print s }'`
set tmpdef2 = `echo ${defocus} | sed 's/,/ /g' | awk '{ s = $2 } END { print s }'`
set gctf_defocus = `echo "scale=3; ( ${tmpdef1} + ${tmpdef2} ) / 20000.0 " | bc `
echo "::Average defocus = ${gctf_defocus} microns"
echo "set gctf_defocus = ${gctf_defocus}" >> LOGS/${scriptname}.results
#
echo `tail -n 2 micrographs_all_gctf.star | head -n 1 ` | cut -d\  -f12 | sed 's/ /,/g' > tmp.1
set gctf_RESMAX = `cat tmp.1`
\rm tmp.1
echo "::Estimated resolution limit by EPA: ${gctf_RESMAX}"
echo "set gctf_RESMAX = ${gctf_RESMAX}" >> LOGS/${scriptname}.results
#
##########################################################################
${proc_2dx}/linblock "Plotting CTF"
##########################################################################
#
\rm -f ${movie_stackname}_EPA.png
${app_python} ${proc_2dx}/CTF_plotter.py ${input_image}_EPA.log ${movie_stackname}_EPA.png
#
echo "#IMAGE: ${movie_stackname}_EPA.png <GCTF plot (PNG)>" >> LOGS/${scriptname}.results
#
##########################################################################
${proc_2dx}/linblock "Update statuspage images."
##########################################################################
#
\rm -f tmp.png
\rm -f tmp2.png
\rm -f STATUS/4-image.jpg
${app_2dx_mrc_converter} --size 400 CTFDiag.mrc tmp.png
${app_python} ${proc_2dx}/PNGannotator.py tmp.png tmp2.png 10 350 0 "GCTF Thon ring fit"
${app_python} ${proc_2dx}/PNGannotator.py tmp2.png STATUS/4-image.jpg 10 365 0 "${date_text}"
\rm -f tmp.png
\rm -f tmp2.png
#
#
echo "<<@progress: 100>>"
echo "<<@evaluate>>"
#
##########################################################################
${proc_2dx}/linblock "${scriptname} - normal end."
##########################################################################
#
exit
#
