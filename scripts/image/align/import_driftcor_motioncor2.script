#!/bin/csh -ef
####
#
#############################################################################
#                                                                           #
# Title: Align w/ MotionCor2                                                #
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 07/21/2016                                             #
# Last Modification: 07/21/2016                                             #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 25 
#
# MANUAL: This script runs a drift correction program on a movie file, to produce a drift-corrected movie and to produce a drift-corrected and averaged image file.
#
# DISPLAY: imagenumber
# DISPLAY: imagename_original
# DISPLAY: comment
# DISPLAY: sample_pixel
# DISPLAY: movie_imagenumber_total
# DISPLAY: KV
# DISPLAY: GPU_how_many
# DISPLAY: GPU_to_use
# DISPLAY: SERIALEM_FACTOR
# DISPLAY: total_dose
# DISPLAY: frame_dose
#
#$end_local_vars
#
set bin_2dx = ""
set proc_2dx = ""
set SCRATCH_DISK = ""
set app_2dx_mrc_converter = ""
#
set tempkeep = ""
set imagename = ""
set nonmaskimagename = ""
set imagenumber = ""
set imagesidelength = ""
set sample_pixel = ""
set raw_gaincorrectedstack = ""
set movie_stackname = ""
set movie_imagenumber_total = ""
set import_rawstack = ""
set KV = ""
set GPU_how_many = ""
set GPU_to_use = ""
set SERIALEM_FACTOR = ""
set status_folder = ""
set total_dose = ""
set frame_dose = ""
set status_folder_update = ""
set import_original_time = ""
#
#$end_vars
#
# get motioncor2 from
# wget http://msg.ucsf.edu/MotionCor2/MotionCor2.zip
#
set scriptname = import_driftcor_motioncor2
\rm -f LOGS/${scriptname}.results
#
source ${proc_2dx}/initialize
#
source ${proc_2dx}/2dx_makedirs
#
if(${import_original_time} == "-" || ${import_original_time} == "") then
  @ status_date = `date +%s` * 1000
else
  set status_date = ${import_original_time}
endif
set date_text = `echo ${status_date} | gawk '{print strftime("%c", $0)}' `
# set date_text = `date -d '@${status_date}' `
#
echo "<<@evaluate>>"
#
echo "<<@progress: 1>>"
#
if ( ${movie_stackname} == "ScriptWillPutNameHere" ) then
  set movie_stackname = movie_aligned
  echo "set movie_stackname = ${movie_stackname}" >> LOGS/${scriptname}.results
endif
#
echo "# IMAGE-IMPORTANT: ${raw_gaincorrectedstack}.mrc <Gain-corrected average image (2D)>" >> LOGS/${scriptname}.results
echo "# IMAGE-IMPORTANT: ${raw_gaincorrectedstack}_fft.mrc <Gain-corrected average image FFT (2D)>" >> LOGS/${scriptname}.results
#
##########################################################################
${proc_2dx}/linblock "Calling MotionCor2..."
##########################################################################
#
if ( ! -e ${app_motioncor2} ) then
  ${proc_2dx}/protest "ERROR: First define location of MOTIONCOR2 in Settings."
endif
#
\rm -f ${movie_stackname}.mrcs
\rm -f ${movie_stackname}_motioncor2Sum.mrc
\rm -f ${movie_stackname}_motioncor2Sum_DW.mrc
\rm -f ${movie_stackname}_motioncor2Sum_Stk.mrc
#
if ( ${GPU_to_use} >= ${GPU_how_many} ) then
  set GPU_to_use = 0
endif
set GPU_to_use_old = ${GPU_to_use}
#
if ( ${GPU_how_many} > "1" ) then
  if ( ${GPU_to_use} == "0" ) then
    set GPU_to_use = `echo ${GPU_how_many} | awk '{ s = $1 - 1 } END { print s }'`
  else
    set GPU_to_use = `echo ${GPU_to_use} | awk '{ s = $1 - 1 } END { print s }'`
  endif
endif
echo "set GPU_to_use = ${GPU_to_use}" >> LOGS/${scriptname}.results
#
echo "<<@progress: 20>>"
echo "<<@evaluate>>"
#
set width = `clip info ${raw_gaincorrectedstack}.mrcs | grep size | cut -d\( -f2 | cut -d\, -f1`
set widthbig = `echo ${width} 4096 | awk '{ if ( $1 > $2 ) { s = 1 } else { s = 0 } } END { print s } '`
if ( ${widthbig} == "1" ) then
  ${proc_2dx}/linblock "Cropping image by 2 after drift correction."
  set motioncorparam1 = "-OutStack 1 -ftbin 2 "
else
  set motioncorparam1 = "-OutStack 1 "
endif
#
echo ": "
echo ": "${app_motioncor2} 
echo ": " -InMrc ${raw_gaincorrectedstack}.mrcs
echo ": " -OutMrc ${movie_stackname}_motioncor2Sum.mrc
echo ": " -Patch 5 5
echo ": " -Iter 10
echo ": " -Tol 0.5
echo ": " -bft 100
echo ": " -kV ${KV}
echo ": " -PixSize ${sample_pixel}
echo ": " -FmDose ${frame_dose}
echo ": " -Gpu ${GPU_to_use_old}  
echo ": " ${motioncorparam1}
echo ": "
#
${app_motioncor2} \
-InMrc ${raw_gaincorrectedstack}.mrcs \
-OutMrc ${movie_stackname}_motioncor2Sum.mrc \
-Patch 5 5 \
-Iter 10 \
-Tol 0.5 \
-bft 100 \
-kV ${KV} \
-PixSize ${sample_pixel} \
-FmDose ${frame_dose} \
-Gpu ${GPU_to_use_old}   \
${motioncorparam1} \
 > LOGS/motioncor2.out 
#
\mv -f ${movie_stackname}_motioncor2Sum_Stk.mrc ${movie_stackname}.mrcs
echo "# IMAGE-IMPORTANT: ${movie_stackname}.mrcs <Drift-corrected movie (stack)>" >> LOGS/${scriptname}.results
#
cat LOGS/motioncor2.out
#
cat LOGS/motioncor2.out | grep shift: | grep Frame | cut -d\: -f2 > motioncor2_shifts.txt
#
#################################################################################
${proc_2dx}/linblock "Running: labelh.exe to normalize MRC image"
#################################################################################
#
echo "<<@progress: 45>>"
#
\rm -f ${movie_stackname}.mrc
#
${bin_2dx}/labelh.exe << eot
${movie_stackname}_motioncor2Sum.mrc
39
${movie_stackname}_Sum.mrc
eot
#
\rm -f ${movie_stackname}_motioncor2Sum.mrc
#
echo "# IMAGE-IMPORTANT: ${movie_stackname}_Sum.mrc <Drift-corrected average (MRC, no DW)>" >> LOGS/${scriptname}.results
#
##########################################################################
echo "::Running ${proc_2dx}/motioncor2_plotter.py ${imagename}_unblur_shifts.txt translations.png"
##########################################################################
#
echo "<<@progress: 50>>"
#
\rm -f translations.png
\rm -f drift_plotter.out
${app_python}  ${proc_2dx}/motioncor2_plotter.py motioncor2_shifts.txt translations.png drift_plotter.out
#
source drift_plotter.out
echo "set import_drift = ${import_drift}" >> LOGS/${scriptname}.results
#
echo "# IMAGE-IMPORTANT: translations.png <drift plot (PNG)>" >> LOGS/${scriptname}.results
echo "# IMAGE-IMPORTANT: ${raw_gaincorrectedstack}.mrcs <Raw movie (stack)>" >> LOGS/${scriptname}.results
#
if ( ${tempkeep} == "n" ) then
  \rm -f ${raw_gaincorrectedstack}.mrcs
endif
#
#################################################################################
${proc_2dx}/linblock "Running: labelh.exe to normalize MRC image"
#################################################################################
#
echo "<<@progress: 70>>"
#
\rm -f ${movie_stackname}.mrc
#
${bin_2dx}/labelh.exe << eot
${movie_stackname}_motioncor2Sum_DW.mrc
39
${movie_stackname}.mrc
eot
#
\rm -f ${movie_stackname}_motioncor2Sum_DW.mrc
#
echo "# IMAGE-IMPORTANT: ${movie_stackname}.mrc <Drift-corrected average image (2D)>" >> LOGS/${scriptname}.results
#
#################################################################################
${proc_2dx}/linblock "Running: 2dx_mrc_converter to create a PNG file for inspection"
#################################################################################
#
echo "<<@progress: 80>>"
#
\rm -f ${movie_stackname}.mrc.png
\rm -f tmp.png
\rm -f tmp2.png
\rm -f SCRATCH/2-image.jpg
${app_2dx_mrc_converter} --size 400 ${movie_stackname}.mrc tmp.png 
${app_python} ${proc_2dx}/PNGannotator.py tmp.png tmp2.png 10 360 "Drift-corrected average"
${app_python} ${proc_2dx}/PNGannotator.py tmp2.png ${movie_stackname}.mrc.png 200 360 "${date_text}"
${app_python} ${proc_2dx}/PNGannotator.py tmp2.png SCRATCH/2-image.jpg 200 360 "${date_text}"
\rm -f tmp.png
\rm -f tmp2.png
#
##########################################################################
echo "::Running: clip fft ${movie_stackname}.mrc ${movie_stackname}_fft.mrc"
##########################################################################
#
echo "<<@progress: 90>>"
#
\rm -f ${movie_stackname}_fft.mrc
clip fft ${movie_stackname}.mrc ${movie_stackname}_fft.mrc
echo "# IMAGE-IMPORTANT: ${movie_stackname}_fft.mrc <Drift-corrected average image FFT (2D)>" >> LOGS/${scriptname}.results
\rm -f ${movie_stackname}_fft.mrc.png
\rm -f tmp.png
\rm -f tmp2.png
\rm -f SCRATCH/2-FFT.jpg
${app_2dx_mrc_converter} --size 400 ${movie_stackname}_fft.mrc tmp.png 
${app_python} ${proc_2dx}/PNGannotator.py tmp.png tmp2.png 10 360 "FFT of drift-corrected average"
${app_python} ${proc_2dx}/PNGannotator.py tmp2.png ${movie_stackname}_fft.mrc.png 200 360 "${date_text}"
${app_python} ${proc_2dx}/PNGannotator.py tmp2.png SCRATCH/2-FFT.jpg 200 360 "${date_text}"
\rm -f tmp.png
\rm -f tmp2.png
#
#
if ( ${status_folder_update} == "y" ) then
 if ( ${status_folder} != "none" ) then
  ##########################################################################
  ${proc_2dx}/linblock "Prepare status images."
  ##########################################################################
  #
  if ( ! -d ${status_folder} ) then
    \mkdir ${status_folder}
  endif
  \cp -f SCRATCH/2-image.jpg ${status_folder}/2-image.jpg
  \cp -f SCRATCH/2-FFT.jpg   ${status_folder}/2-FFT.jpg
  \cp -f translations.png    ${status_folder}/3-image.png
  #
  echo "${status_date}@@uploaded=2-image.jpg" >> ${status_folder}/data.txt
  echo "${status_date}@@uploaded=2-FFT.jpg" >> ${status_folder}/data.txt
  echo "${status_date}@@uploaded=3-image.png" >> ${status_folder}/data.txt
 endif
endif
#
##########################################################################
${proc_2dx}/linblock "${scriptname} - normal end."
##########################################################################
#
echo "<<@progress: 100>>"
echo "<<@evaluate>>"
exit
#
# These are listed here to make sure they appear in the 2dx_image GUI:
#
