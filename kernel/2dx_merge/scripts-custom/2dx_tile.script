#!/bin/csh -fe
####
#
#############################################################################
#                                                                           #
# Title: Tile Images (Experimental)                                         #
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 01/14/2016                                             #
# Last Modification: 01/14/2016                                             #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 97
#
# MANUAL: <B>Tile Images <B>
#
#$end_local_vars
#
set bin_2dx = ""
set proc_2dx = ""
set app_2dx_image = ""
set SCRATCH_DISK = ""
#
# Variables to be available from the config file are:
#
#$end_vars
#
set scriptname = 2dx_tile
#
\rm -f LOGS/${scriptname}.results
#
echo "<<@progress: 1>>"
# echo "<<@evaluate>>"
#
source ${proc_2dx}/2dx_makedirs
#
echo "# IMAGE: 2dx_merge_dirfile.dat <TXT: Directory List>" >> LOGS/${scriptname}.results
#
# This memorizes the current merge directory under the variable "olddir":
set olddir = $PWD
#
echo "::The current working directory is" ${olddir}
echo ": "
#
set newimagesidelength = 1024
set tilenumber = 5
set tileseries = "1 2 3 4 5"
#
set tilenumberm1 = `echo ${tilenumber} | awk '{ s = $1 - 1 } END { print s }'`
#
cd ..
if ( ! -d TILES ) then
  \mkdir TILES
endif
cd TILES
set target_base = $PWD
echo "::Target base is ${target_base}"
if ( ! -d merge ) then
  \mkdir merge
  \cp -r ${olddir}/* merge
  \ln -s merge/2dx_merge.cfg 2dx_master.cfg
endif
#
cd ${olddir}
#
cp 2dx_merge_dirfile.dat SCRATCH/2dx_merge_alldirs.dat
#
set dirnum = `cat SCRATCH/2dx_merge_alldirs.dat | wc -l`
echo ": Will work on ${dirnum} image directories."
set increment = `echo ${dirnum} | awk '{ s = 80.0 / ( $1 + 1 ) } END { print s }'`
set curval = 10.0
#
set dircounter = ${dirnum}
set irun = 1
while ( ${dircounter} > 0 )
  #
  ${bin_2dx}/2dx_getline.exe << eot > TMP.tmp
${olddir}/SCRATCH/2dx_merge_alldirs.dat
${dircounter}
eot
  #
  set from_dir = `cat TMP.tmp`
  \rm TMP.tmp
  #
  cd ..
  cd ${from_dir}
  #
  set imagename = `cat 2dx_image.cfg | grep "set imagename =" | cut -d\" -f2`
  set nonmaskimagename = `cat 2dx_image.cfg | grep "set nonmaskimagename =" | cut -d\" -f2`
  set imagenumber      = `cat 2dx_image.cfg | grep "set imagenumber =" | cut -d\" -f2`
  set TLTAXIS          = `cat 2dx_image.cfg | grep "set TLTAXIS =" | cut -d\" -f2`
  set TLTANG           = `cat 2dx_image.cfg | grep "set TLTANG =" | cut -d\" -f2`
  set CS               = `cat 2dx_image.cfg | grep "set CS =" | cut -d\" -f2`
  set KV               = `cat 2dx_image.cfg | grep "set KV =" | cut -d\" -f2`
  set phacon           = `cat 2dx_image.cfg | grep "set phacon =" | cut -d\" -f2`
  set magnification    = `cat 2dx_image.cfg | grep "set magnification =" | cut -d\" -f2`
  set stepdigitizer    = `cat 2dx_image.cfg | grep "set stepdigitizer =" | cut -d\" -f2`
  set defocus          = `cat 2dx_image.cfg | grep "set defocus =" | cut -d\" -f2`
  set RESMAX           = `cat 2dx_image.cfg | grep "set RESMAX =" | cut -d\" -f2`
  set ctfcor_noise     = `cat 2dx_image.cfg | grep "set ctfcor_noise =" | cut -d\" -f2`
  set imode            = 7
  set ctfcor_debug     = `cat 2dx_image.cfg | grep "set ctfcor_debug =" | cut -d\" -f2`
  set ctfcor_maxamp_factor = `cat 2dx_image.cfg | grep "set ctfcor_maxamp_factor =" | cut -d\" -f2`
  set realcell         = `cat 2dx_image.cfg | grep "set realcell =" | cut -d\" -f2`
  set ALAT             = `cat 2dx_image.cfg | grep "set ALAT =" | cut -d\" -f2`
  set realang          = `cat 2dx_image.cfg | grep "set realang =" | cut -d\" -f2`
  set lattice          = `cat 2dx_image.cfg | grep "set lattice =" | cut -d\" -f2`
  set phaori           = `cat 2dx_image.cfg | grep "set phaori =" | cut -d\" -f2`
  set imagesidelength  = `cat 2dx_image.cfg | grep "set imagesidelength =" | cut -d\" -f2`
  set sample_pixel      = `cat 2dx_image.cfg | grep "set sample_pixel =" | cut -d\" -f2`
  #
  set locimagenumber = ${imagenumber}
  #
  echo ": "
  ${proc_2dx}/linblock "Working on TILE_${imagenumber}: ${from_dir}"
  #
  set unbent_image = unbent
  echo ":PWD = $PWD"
  ls -l ${unbent_image}.mrc
  #
  set realu      = `echo ${realcell} | sed 's/,/ /g' | awk '{ s = $1 } END { print s }'`
  set realv      = `echo ${realcell} | sed 's/,/ /g' | awk '{ s = $2 } END { print s }'`
  set lattice_u1 = `echo ${lattice} ${imagesidelength} ${newimagesidelength} | sed 's/,/ /g' | awk '{ s = $1 / $5 * $6 } END { print s }'`
  set lattice_u2 = `echo ${lattice} ${imagesidelength} ${newimagesidelength} | sed 's/,/ /g' | awk '{ s = $2 / $5 * $6 } END { print s }'`
  set lattice_v1 = `echo ${lattice} ${imagesidelength} ${newimagesidelength} | sed 's/,/ /g' | awk '{ s = $3 / $5 * $6 } END { print s }'`
  set lattice_v2 = `echo ${lattice} ${imagesidelength} ${newimagesidelength} | sed 's/,/ /g' | awk '{ s = $4 / $5 * $6 } END { print s }'`
  set newlattice = `echo ${lattice_u1},${lattice_u2},${lattice_v1},${lattice_v2}`
  echo ": "
  echo ":Old lattice = ${lattice}"
  echo ":New lattice = ${newlattice}"
  echo ": "
  #
  set inimage          = "unbent.mrc"
  if ( -e ${inimage} ) then
    set ctfcor_ctffile = "SCRATCH/2dx_ctfcor_ctffile.mrc"
    set ctfcor_outfile = "SCRATCH/image_ctf.mrc"
    set outimage       = "tile_ctf_taper.mrc"
    set outfft         = "SCRATCH/tile_ctf_taper_fft.mrc"
    set CTF_outfile_nA = image_ctfcor_fou_unbent_ctf.aph
    echo "# IMAGE: ${olddir}/../${from_dir}/${inimage} <Unbent U2 Image>" >>  ${olddir}/LOGS/${scriptname}.results
    source ${proc_2dx}/2dx_tile_sub.com
  endif
  #
  set inimage          = "MA/direct_sum_filt_upscale.mrc"
  if ( -e ${inimage} ) then
    set ctfcor_ctffile = "SCRATCH/2dx_ctfcor_ctffile.mrc"
    set ctfcor_outfile = "SCRATCH/image_ctf.mrc"
    set outimage       = "tile_ctf_taper.mrc"
    set outfft         = "SCRATCH/tile_ctf_taper_fft.mrc"
    set CTF_outfile_nA = image_ctfcor_movie_fou_ctf.aph
    echo "# IMAGE: ${olddir}/../${from_dir}/${inimage} <Unbent MA Image>" >>  ${olddir}/LOGS/${scriptname}.results
    source ${proc_2dx}/2dx_tile_sub.com
  endif
  #
  set inimage          = "MB/direct_sum_filt_upscale.mrc"
  if ( -e ${inimage} ) then
    set ctfcor_ctffile = "SCRATCH/2dx_ctfcor_ctffile.mrc"
    set ctfcor_outfile = "SCRATCH/image_ctf.mrc"
    set outimage       = "tile_ctf_taper.mrc"
    set outfft         = "SCRATCH/tile_ctf_taper_fft.mrc"
    set CTF_outfile_nA = image_ctfcor_movieB_fou_ctf.aph
    echo "# IMAGE: ${olddir}/../${from_dir}/${inimage} <Unbent MB Image>" >>  ${olddir}/LOGS/${scriptname}.results
    source ${proc_2dx}/2dx_tile_sub.com
  endif
  #
  set progress = `echo ${irun} ${dirnum} | awk '{ s = 10 + int( 80 * $1 / $2 ) } END { print s }'` 
  echo "<<@progress:${progress}>>"
  #
  @ irun += 1
  @ dircounter -= 1
  cd ${olddir}
end
#
${proc_2dx}/lin "Done."
echo "<<@progress: 100>>"
#
#
