#!/bin/csh -ef
####
#
#############################################################################
#                                                                           #
# Title: Prepare TILES                                                      #
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 01/12/2016                                             #
# Last Modification: 01/12/2016                                             #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 97
#
# MANUAL: This script allows to launch several jobs in parallel.  Choose below, which 2dx_image scripts to include.
#
# DISPLAY: ReUnbend_MP
#
#=============================================================================
# SECTION: Create Tiles
#=============================================================================
#
# LABEL: Clone merge directory first?
# LEGEND: Choose if the merge directory should be copied also
# EXAMPLE: tile_copy_merge = "0"
# HELP: http://2dx.org/documentation/2dx-software/parameters
# TYPE: Drop_Down_Menu "0=no;1=yes"
set tile_copy_merge = "0"
#
#$end_local_vars
#
set bin_2dx = ""
set proc_2dx = ""
set app_2dx_image = ""
set SCRATCH_DISK = ""
#
set ReUnbend_MP = ""
#
#$end_vars 
#
set scriptname = 2dx_tile
\rm -f LOGS/${scriptname}.results
#
set ccp4_setup = 'y'
source ${proc_2dx}/initialize
source ${proc_2dx}/2dx_merge_makedirs 
#
echo "<<@progress: 1>>"
#
echo "# IMAGE: 2dx_merge_dirfile.dat <TXT: Directory List>" >> LOGS/${scriptname}.results
#
set newimagesidelength = 1024
set tilenumber = 5
#
set olddir = ${PWD}
cd ..
set rootdir = ${PWD}
#
############################################################################# 
# Copy Merge Directory to new TILE location
############################################################################# 
if ( ! -d TILES ) then
  \mkdir TILES
endif
cd TILES
set target_base = $PWD
echo "::Target base is ${target_base}"
if ( ! -d merge ) then
  \mkdir merge
  \cp -r ${olddir}/* merge
else
  if ( ${tile_copy_merge} == "1" ) then
    \cp -rf ${olddir}/* merge
  endif
endif
if ( ! -l 2dx_master.cfg ) then
  \ln -s merge/2dx_merge.cfg 2dx_master.cfg
endif
############################################################################# 
#
cd ${olddir} 
#
# set loadaverage = `uptime | cut -d\: -f4 | cut -d\  -f2`
set loadaverage = `ps -axf | sed -n '/${scriptname}/p' | wc -l`
set ReUnbend_MP = `cat 2dx_merge.cfg | grep "set ReUnbend_MP" | cut -d\" -f2`
\cp -f 2dx_merge.cfg SCRATCH/${scriptname}_2dx_merge_cfg.tmp
#
set dirnum = `cat 2dx_merge_dirfile.dat | wc -l`
echo ": Will work on ${dirnum} image directories."
#
\cp -f 2dx_merge_dirfile.dat SCRATCH/${scriptname}_2dx_merge_dirfile_runfile.dat
#
set dircounter = 1
while ( ${dircounter} <= ${dirnum} )
    #
    set prog_num = `echo ${dircounter} ${dirnum} | awk '{ s = 5 + int( 90 * $1 / $2 ) } END { print s }'` 
    echo "<<@progress: ${prog_num}>>"
    #
    cd ${olddir}
    ${bin_2dx}/2dx_getline.exe << eot > TMP.tmp
SCRATCH/${scriptname}_2dx_merge_dirfile_runfile.dat
${dircounter}
eot
    #
    set from_dir = `cat TMP.tmp`
    \rm TMP.tmp
    #
    cd ..
    cd ${from_dir}
    #
    if ( -e 2dx_image.cfg ) then
      echo ": "
      echo "Working on ${from_dir} ("`date`")"

      ${proc_2dx}/linblock "At load ${loadaverage}/${ReUnbend_MP}, launching job ${dircounter} of ${dirnum} on ${from_dir}"

      ###########################################################################################################################
      # set bin_2dx = $1
      # set proc_2dx = $2
      # set app_2dx_image = $3
      # set SCRATCH_DISK = $4
      # set scriptname = $5
      # set newimagesidelength = $6
      # set tilenumber = $7
      # set olddir = $8
      # set from_dir = $9
      #
      echo ": Launching: "
      echo ":" ${proc_2dx}/2dx_tile_sub.com ${bin_2dx} ${proc_2dx} ${app_2dx_image} ${SCRATCH_DISK} ${scriptname} ${newimagesidelength} ${tilenumber} ${olddir} ${from_dir}
      #
      nohup ${proc_2dx}/2dx_tile_sub.com ${bin_2dx} ${proc_2dx} ${app_2dx_image} ${SCRATCH_DISK} ${scriptname} ${newimagesidelength} ${tilenumber} ${olddir} ${from_dir} &
      #
      ###########################################################################################################################

      cd ${olddir}
      set load_too_high = 1
      while ( ${load_too_high} == 1 ) 
        set ReUnbend_MP = `cat SCRATCH/${scriptname}_2dx_merge_cfg.tmp | grep "set ReUnbend_MP" | cut -d\" -f2`
        set loadaverage = `ps -axf | sed -n '/2dx_tile_sub.com/p' | wc -l`
        set load_too_high = `echo ${loadaverage} ${ReUnbend_MP} | awk '{ if ( ( $1 - 0 ) > $2 ) { s = 1 } else { s = 0 } } END { print s }'`
        if ( ${load_too_high} == 1 ) then
          sleep 2
        endif
      end

    else
      echo "::ERROR for ${from_dir}: No 2dx_image.cfg found."
    endif
    # 
    # 
    @ dircounter++
    cd ${olddir}
  end
  echo "::Waiting for last jobs to finish"
  set load_too_high = 1
  while ( ${load_too_high} == 1 ) 
    set ReUnbend_MP = `cat SCRATCH/${scriptname}_2dx_merge_cfg.tmp | grep "set ReUnbend_MP" | cut -d\" -f2`
    set loadaverage = `ps -axf | sed -n '/2dx_tile_sub.com/p' | wc -l`
    set load_too_high = `echo ${loadaverage} 1 | awk '{ if ( ( $1 - 2 ) > $2 ) { s = 1 } else { s = 0 } } END { print s }'`
    if ( ${load_too_high} == 1 ) then
      sleep 5
      # ps -af | grep ${scriptname}
    endif
  end
  echo "::Last jobs have finished."
#
#
echo ":: Done."
echo "<<@progress: 100>>"
#
############################################################################# 
${proc_2dx}/linblock "${scriptname} - normal end."
#############################################################################
#
exit
#
#
