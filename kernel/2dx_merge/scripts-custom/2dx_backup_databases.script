#!/bin/csh -ef
#############################################################################
#                                                                           #
# Title: Backup Databases (in preparation)                                  #
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 10/01/2011                                             #
# Last Modification: 10/01/2011                                             #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 91
#
# MANUAL: This script can be used to backup or restore all 2dx_image.cfg databases.
#
# DISPLAY: backup_sure
# DISPLAY: backup_all_files
# DISPLAY: backup_database_direction
#
#$end_local_vars
#
# This defines some variables that we might need:
set proc_2dx = ""
set bin_2dx = ""
set app_2dx_image = ""
set SCRATCH_DISK = ""
set FFTIR_DISK = ""
#
set backup_sure = ""
set backup_all_files = ""
set backup_database_direction = ""
#
#$end_vars
#
# This sets the scriptname variable:
set scriptname = 2dx_backup_databases
#
# This removes the old logfile, so that a new fresh one can be created:
\rm -f LOGS/${scriptname}.results
#
# This initializes the ccp4 environment, and other variables.
set ccp4_setup = 'y'
source ${proc_2dx}/initialize
#
# This advances the progress bar to the 1% position:
echo "<<@progress: 1>>"
#
# This creates all needed subdirectories in the current merge directory, in case they are missing:
source ${proc_2dx}/2dx_makedirs 
#
# This translates the list of directories to work on into one single long line:
cat 2dx_merge_dirfile.dat | tr "\n" " " > SCRATCH/2dx_merge_dirfile_oneline.dat
set dirlist = "`cat SCRATCH/2dx_merge_dirfile_oneline.dat`"
#
# This memorizes the current merge directory under the variable "olddir":
set olddir = $PWD
#
# This initiates a big "foreach" loop that sets the variable "dirfile" to each of the items in the "dirlist" and runs the contents of the loop with this value:
foreach dirfile ( ${dirlist} ) 
  echo "::Working on ${dirfile}"
  #
  ################################################################################
  #
  # Use the following to unlock these variables avain:
  # echo "#unlock phaori" >> LOGS/${scriptname}.results
  # echo "#unlock phaoriFouFilter" >> LOGS/${scriptname}.results
  #
  ################################################################################
  ######### Modify only the section above ########################################
  ################################################################################
  #
end
#
# Move the progress bar to 100%:
echo "<<@progress: 100>>"
#
# Leave a message on the logfile that the script finished:
${proc_2dx}/linblock "${scriptname} finished correctly."
#
