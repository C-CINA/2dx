#!/bin/csh -ef
####
#
#############################################################################
#                                                                           #
# Title: Parallel processing                                                #
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 20/09/2007                                             #
# Last Modification: 20/09/2007                                             #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 3
#
# MANUAL: This script allows to launch several jobs in parallel.  You need to edit the script to your needs.
#
# DISPLAY: ReUnbend_MP
#
#$end_local_vars
#
set bin_2dx = ""
set proc_2dx = ""
set app_2dx_image = ""
#
set ReUnbend_MP = ""
#
#$end_vars
#
#
set scriptname = 2dx_reunbend2
\rm -f LOGS/${scriptname}.results
#
set ccp4_setup = 'y'
source ${proc_2dx}/initialize
source ${proc_2dx}/2dx_merge_makedirs 
#
echo "<<@progress: 1>>"
#
set olddir = ${PWD}
cd ..
set rootdir = ${PWD}
#
  #
  ############################################################################# 
  ${proc_2dx}/linblock "Processing custom scripts in all selected directories in ${ReUnbend_MP} jobs"
  ############################################################################# 
  #
  cd ${olddir} 
  #
  # set loadaverage = `uptime | cut -d\: -f4 | cut -d\  -f2`
  set loadaverage = `ps -af | grep ${scriptname}.com | wc -l`
  set ReUnbend_MP = `cat 2dx_merge.cfg | grep "set ReUnbend_MP" | cut -d\" -f2`
  \cp -f 2dx_merge.cfg SCRATCH/${scriptname}_2dx_merge_cfg.tmp
  #
  set dirnum = `cat 2dx_merge_dirfile.dat | wc -l`
  echo ": Will work on ${dirnum} image directories."
  #
  sort 2dx_merge_dirfile.dat > SCRATCH/${scriptname}_2dx_merge_dirfile_runfile.dat
  #
  set dircounter = 1
  while ( ${dircounter} <= ${dirnum} )
    #
    set prog_num = `echo ${dircounter} ${dirnum} | awk '{ s = 5 + int( 90 * $1 / $2 ) } END { print s }'` 
    echo "<<@progress: ${prog_num}>>"
    #
    cd ${olddir}
    ${bin_2dx}/2dx_getline.exe << eot > TMP.tmp
SCRATCH/${scriptname}_2dx_merge_dirfile_runfile.dat
${dircounter}
eot
    #
    set dirfile = `cat TMP.tmp`
    \rm TMP.tmp
    #
    cd ..
    cd ${dirfile}
    if ( -e 2dx_image.cfg ) then
      echo ": "
      set curdir = ${PWD}
      # set QVALMA_local = `cat 2dx_image.cfg | grep "set QVALMA =" | cut -d\" -f2`
      # set QVALMB_local = `cat 2dx_image.cfg | grep "set QVALMB =" | cut -d\" -f2`
      # echo ":: QVALMA_local = ${QVALMA_local}" 
      # if ( ${QVALMA_local}x == "x"  || ${QVALMA_local}x == ".x" ||  ${QVALMA_local}x == "0.00x" ||  ${QVALMB_local}x == "x"  || ${QVALMB_local}x == ".x" ||  ${QVALMB_local}x == "0.00x" ) then
      if ( 1 == 1 ) then 
        echo "Working on ${curdir} ("`date`")"

        ${proc_2dx}/linblock "At load ${loadaverage}/${ReUnbend_MP}, launching job ${dircounter} of ${dirnum} on ${dirfile}"

        ###########################################################################################################################
        ##############################################  Edit the section below  ###################################################
        ###########################################################################################################################



        # nohup ${app_2dx_image} ${curdir} '"*"' ;  echo ":: Background process finished with ${dirfile} ("`date`")" &

        # nohup ${app_2dx_image} ${curdir} "+2dx_evaluateLattice"; echo ":: Background process finished with ${dirfile} ("`date`")" &

        # nohup ${app_2dx_image} ${curdir} "2dx_initialize"; ${app_2dx_image} ${curdir} "2dx_fftrans"; ${app_2dx_image} ${curdir} "2dx_ctfcor"; ${app_2dx_image} ${curdir} "2dx_unbend1"; ${app_2dx_image} ${curdir} "2dx_getspots"; ${app_2dx_image} ${curdir} "2dx_unbend2"; ${app_2dx_image} ${curdir} "2dx_unbendSyn"; ${app_2dx_image} ${curdir} "2dx_applyCTF"; ${app_2dx_image} ${curdir} "2dx_generateMAP" ;  echo ":: Background process finished with ${dirfile} ("`date`")" &

        # nohup ${app_2dx_image} ${curdir} "2dx_initialize"; ${app_2dx_image} ${curdir} "2dx_fftrans"; echo ":: Background process finished with ${dirfile} ("`date`")" &

        # nohup ${app_2dx_image} ${curdir} "2dx_initialize"; ${app_2dx_image} ${curdir} "2dx_unbendSyn"; ${app_2dx_image} ${curdir} "2dx_applyCTF"; ${app_2dx_image} ${curdir} "2dx_generateMAP" ;  echo ":: Background process finished with ${dirfile} ("`date`")" &

        # nohup ${app_2dx_image} ${curdir} "2dx_initialize"; ${app_2dx_image} ${curdir} "2dx_fftrans"; ${app_2dx_image} ${curdir} "2dx_getspots1"; ${app_2dx_image} ${curdir} "2dx_ctfcor"; ${app_2dx_image} ${curdir} "2dx_unbend1"; ${app_2dx_image} ${curdir} "2dx_getspots"; ${app_2dx_image} ${curdir} "2dx_unbend2"; ${app_2dx_image} ${curdir} "2dx_applyCTF"; ${app_2dx_image} ${curdir} "2dx_generateMAP" ;  echo ":: Background process finished with ${dirfile} ("`date`")" &

        nohup ${app_2dx_image} ${curdir} "2dx_initialize"; ${app_2dx_image} ${curdir} "2dx_unbendSyn"; ${app_2dx_image} ${curdir} "2dx_unbend_movieAS1"; ${app_2dx_image} ${curdir} "2dx_unbend_movieAS2"; ${app_2dx_image} ${curdir} "2dx_unbend_movieBS"; ${app_2dx_image} ${curdir} "2dx_applyCTF"; ${app_2dx_image} ${curdir} "2dx_generateMAP" ;  echo ":: Background process finished with ${dirfile} ("`date`")" &

        # nohup ${app_2dx_image} ${curdir} "2dx_initialize"; ${app_2dx_image} ${curdir} "2dx_unbend_movieA1"; ${app_2dx_image} ${curdir} "2dx_unbend_movieA2"; ${app_2dx_image} ${curdir} "2dx_unbend_movieAS1"; ${app_2dx_image} ${curdir} "2dx_unbend_movieAS2"; ${app_2dx_image} ${curdir} "2dx_unbend_movieB"; ${app_2dx_image} ${curdir} "2dx_unbend_movieBS"; ${app_2dx_image} ${curdir} "2dx_applyCTF"; ${app_2dx_image} ${curdir} "2dx_generateMAP" ;  echo ":: Background process finished with ${dirfile} ("`date`")" &

        # nohup ${app_2dx_image} ${curdir} "2dx_initialize"; ${app_2dx_image} ${curdir} "2dx_getDefTilt"; ${app_2dx_image} ${curdir} "+2dx_evaluateLattice"; ${app_2dx_image} ${curdir} "2dx_applyCTF"; ${app_2dx_image} ${curdir} "2dx_generateMAP" ;  echo ":: Background process finished with ${dirfile} ("`date`")" &

        # nohup ${app_2dx_image} ${curdir} "2dx_initialize"; ${app_2dx_image} ${curdir} "2dx_fftrans"; ${app_2dx_image} ${curdir} "2dx_getSampleTilt"; ${app_2dx_image} ${curdir} "2dx_getspots1"; ${app_2dx_image} ${curdir} "2dx_ctfcor"; ${app_2dx_image} ${curdir} "2dx_unbend1"; ${app_2dx_image} ${curdir} "2dx_getspots"; ${app_2dx_image} ${curdir} "2dx_unbend2"; ${app_2dx_image} ${curdir} "2dx_unbendSyn"; ${app_2dx_image} ${curdir} "2dx_unbend_movie1a"; ${app_2dx_image} ${curdir} "2dx_unbend_movie1b"; ${app_2dx_image} ${curdir} "2dx_unbend_movie2"; ${app_2dx_image} ${curdir} "2dx_applyCTF"; ${app_2dx_image} ${curdir} "2dx_generateMAP" ;  echo ":: Background process finished with ${dirfile} ("`date`")" &

        ###########################################################################################################################
        ##############################################  Edit the section above  ###################################################
        ###########################################################################################################################


        cd ${olddir}
        set load_too_high = 1
        while ( ${load_too_high} == 1 ) 
          set ReUnbend_MP = `cat SCRATCH/${scriptname}_2dx_merge_cfg.tmp | grep "set ReUnbend_MP" | cut -d\" -f2`
          set loadaverage = `ps -af | grep ${scriptname}.com | wc -l`
          set load_too_high = `echo ${loadaverage} ${ReUnbend_MP} | awk '{ if ( $1 > $2 ) { s = 1 } else { s = 0 } } END { print s }'`
          if ( ${load_too_high} == 1 ) then
            sleep 2
          endif
        end

      else
        echo ": Skipping ${dirfile}: QVALMA = ${QVALMA_local},  QVALMB = ${QVALMB_local} ("`date`")"
      endif
    else
      echo "::ERROR for ${dirfile}: No 2dx_image.cfg found."
    endif
    # 
    # 
    @ dircounter++
    cd ${olddir}
  end
  echo "::Waiting for last jobs to finish"
  set load_too_high = 1
  while ( ${load_too_high} == 1 ) 
    set ReUnbend_MP = `cat SCRATCH/${scriptname}_2dx_merge_cfg.tmp | grep "set ReUnbend_MP" | cut -d\" -f2`
    set loadaverage = `ps -af | grep ${scriptname}.com | wc -l`
    set load_too_high = `echo ${loadaverage} 3 | awk '{ if ( $1 > $2 ) { s = 1 } else { s = 0 } } END { print s }'`
    if ( ${load_too_high} == 1 ) then
      sleep 5
      # ps -af | grep ${scriptname}.com
    endif
  end
  echo "::Last jobs have finished."
#
#
echo ":: Done."
echo "<<@progress: 100>>"
#
############################################################################# 
${proc_2dx}/linblock "${scriptname} - normal end."
#############################################################################
#
exit
#
#
