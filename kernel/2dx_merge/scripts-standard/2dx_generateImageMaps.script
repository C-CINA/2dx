#!/bin/csh -ef
####
#
#############################################################################
#                                                                           #
# Title: Generate Image Maps                                                #
#                                                                           #
# 2dx.org, GNU Plublic License.                                             #
#                                                                           #
# Created..........: 02/20/2006                                             #
# Last Modification: 09/20/2006                                             #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 70
#
# MANUAL: This script makes use of MRC and CCP4 commands to generate the projection maps of all selected images, using the latest phase origin settings.
#
# DISPLAY: RESMIN
# DISPLAY: RESMAX
# DISPLAY: SYM
# DISPLAY: ALAT
# DISPLAY: tempfac
# DISPLAY: MergeIQMAX
# DISPLAY: realang
# DISPLAY: realcell
# DISPLAY: make_reference
# DISPLAY: merge_modus
# DISPLAY: merge_ref_num
# DISPLAY: create_PS
#
#$end_local_vars
#
set bin_2dx = ""
set proc_2dx = ""
#
set tempkeep = ""
set RESMIN = ""
set RESMAX = ""
set ALAT = ""
set realang = ""
set realcell = ""
set MergeIQMAX = ""
set tempfac = ""
set SYM = ""
set make_reference = ""
set merge_modus = ""
set merge_ref_num = ""
set genref = ""
set spcgrp = ""
set realang = ""
set zstarwin = ""
set IVERBOSE = ""
set RFACAMP = ""
set MergeHKMAX = ""
set merge_res_limit = ""
set create_PS = ""
#
#$end_vars
#
echo "<<@progress: 1>>"
#
set ccp4_setup = 'y'
source ${proc_2dx}/initialize
#
echo tempkeep = ${tempkeep}
echo RESMIN = ${RESMIN}
echo RESMAX = ${RESMAX}
echo ALAT = ${ALAT}
echo realang = ${realang}
echo realcell = ${realcell}
echo tempfac = ${tempfac}
#
set imagenumber = 1001
set imagename = "merge"
#
set scriptname = 2dx_generateImageMaps
#
${proc_2dx}/2dx_merge_makedirs 
#
\rm -f LOGS/${scriptname}.results
#
set RESULTSPS = "n"
set RESULTSMRC = "n"
\rm -rf RESULTS-MRC
\rm -rf RESULTS-PS
\mkdir RESULTS-MRC
\mkdir RESULTS-PS
#
set date = `date`
echo date = ${date}
#
if ( ${ALAT} == "0" || ${ALAT} == "0.0" ) then
  ${proc_2dx}/protest "ALAT is not defined."
endif
set ALATnew = `echo ${ALAT} | awk '{ if ( $1 < 0 ) { s = -$1 } else { s = $1 }} END { print s }'`
if ( ${ALAT} != ${ALATnew} ) then
  set ALAT = ${ALATnew}
  echo "set ALAT = ${ALAT}" >> LOGS/${scriptname}.results
endif
#
set zwin = `echo ${ALAT} | awk '{ s = 1.0 / ( 2.0 * $1 ) } END { print s }'`
echo zwin = $zwin
#
#???? Check this ???
set SCL = 1
echo "SCL = ${SCL}"
#
# contrast for grey plot
set scale = 1
echo "scale = ${scale}"
#
if ( ${merge_modus} == "2D" ) then
  if ( ${make_reference} == "y" ) then
    ${proc_2dx}/linblock "#"
    ${proc_2dx}/linblock "ERROR: Reference images can only be produced in 3D modus with an MTZ file."
    ${proc_2dx}/linblock "No references calculated."
    ${proc_2dx}/linblock "#"
    set make_reference = "n"
  endif
endif
#
#############################################################################
${proc_2dx}/linblock "sourcing sym2spsgrp_sub.com"
#############################################################################
#
source ${proc_2dx}/2dx_sym2spcgrp_sub.com
#
echo SYM = ${SYM}
echo spcgrp = ${spcgrp}
echo CCP4_SYM = ${CCP4_SYM}
#
############################################################################# 
${proc_2dx}/lin "2dx_merge_makedirs - to create all required subdirectories"
#############################################################################
#
${proc_2dx}/2dx_merge_makedirs
#
echo "<<@progress: 10>"
#
if ( ${make_reference} == "y" ) then
  #
  set NPRG = 1
  if ( ${merge_modus} == '2D' ) then
    if ( ! -e APH/merge.aph ) then
      ${proc_2dx}/linblock "ERROR: APH/merge.aph not found. No reference for refinement available."
      ${proc_2dx}/linblock "Run Merging script first."
    endif
  endif
  if ( ${merge_modus} == '3D' ) then
    # User interpolated lattice lines latlinesref.mtz
    if ( ! -e merge3D.mtz ) then
      ${proc_2dx}/linblock "ERROR: merge.mtz not found. No reference for refinement available."
      ${proc_2dx}/linblock "Run Merging script first."
    endif
    set NPRG = 3
  endif
  #
  if ( ${merge_ref_num} != "0" ) then
    if ( -d REGISTERS/Reg_${merge_ref_num} ) then
       #############################################################################
       ${proc_2dx}/linblock "Using merged dataset from register ${merge_ref_num}."
       #############################################################################  
       echo "::" `cat REGISTERS/Reg_${merge_ref_num}/COMMENT.txt | head -1`
       echo "::" `cat REGISTERS/Reg_${merge_ref_num}/COMMENT.txt | head -2 | tail -1`
       echo " "
      if ( ${NPRG} == "3" ) then
        # Use MTZ file
        if ( ! -e REGISTERS/Reg_${merge_ref_num}/merge3D.mtz ) then
          ${proc_2dx}/protest "ERROR: merge3D.mtz not existing in register ${merge_ref_num}."
        else
          echo ":Copying REGISTERS/Reg_${merge_ref_num}/merge3D.mtz ."
          \cp -f REGISTERS/Reg_${merge_ref_num}/merge3D.mtz .
        endif
        #
        if ( ! -e REGISTERS/Reg_${merge_ref_num}/merge3Dref.mtz ) then
          ${proc_2dx}/protest "ERROR: merge3Dref.mtz not existing in register ${merge_ref_num}."
        else
          echo ":Copying REGISTERS/Reg_${merge_ref_num}/merge3Dref.mtz ."
          \cp -f REGISTERS/Reg_${merge_ref_num}/merge3Dref.mtz .
        endif
      else
        # Use APH file
        if ( ! -e REGISTERS/Reg_${merge_ref_num}/merge2D.mtz ) then
          ${proc_2dx}/protest "ERROR: merge2D.mtz not existing in register ${merge_ref_num}."
        else
          echo ":Copying REGISTERS/Reg_${merge_ref_num}/merge2D.mtz ." 
          \cp -f REGISTERS/Reg_${merge_ref_num}/merge2D.mtz .
        endif
        if ( ! -e REGISTERS/Reg_${merge_ref_num}/merge.aph ) then
          ${proc_2dx}/protest "ERROR: merge.aph not existing in register ${merge_ref_num}."
        else
          echo ":Copying REGISTERS/Reg_${merge_ref_num}/merge.aph APH/merge.aph"
          \cp -f REGISTERS/Reg_${merge_ref_num}/merge.aph APH/merge.aph
        endif
      endif
    else
      ${proc_2dx}/protest "ERROR: Register ${merge_ref_num} does not contain data."
    endif
    #
  endif
  #
  #############################################################################
  ${proc_2dx}/linblock "Compile refinement script"
  #############################################################################
  #
  set scriptBfile = "SCRATCH/2dx_merge_scriptB.com"
  \rm -f ${scriptBfile}
  set postprocessingfile = "SCRATCH/2dx_merge_postprocessing.com"
  \rm -f ${postprocessingfile}
  #
  set genref = "1"
  #
  \rm -f LOGS/${scriptname}-tmp.results
  #
  set dirfile = "2dx_merge_dirfile.dat"
  set number = 1
  set IVERBOSE = 1
  set RFACAMP = 1.0
  set NBM = F
  set NTL = F
  set MergeStepSize = "0.001"
  set IBOXPHS = 61
  #
  ${bin_2dx}/2dx_merge_compileB.exe << eot
LOGS/${scriptname}-tmp.results
${proc_2dx}
${bin_2dx}
${dirfile}
${scriptBfile}
${postprocessingfile}
${genref}
${spcgrp}
${realcell}
${realang}
${zstarwin}
${ALAT}
${IVERBOSE}
${MergeStepSize}
${RFACAMP}
${IBOXPHS}
${NPRG}
${NBM}
${NTL}
${MergeIQMAX}
${MergeHKMAX}
${merge_res_limit}
${RESMIN}
${RESMAX}
0
eot
  #
  echo "<<@progress: 20>>"
  #
  #############################################################################
  ${proc_2dx}/linblock "Launch refinement script. CHECK OUTPUT in LOG: origtilt B output"
  #############################################################################
  #
  echo "# IMAGE: ${scriptBfile} <CSH: refinement script>" >> LOGS/${scriptname}.results
  echo "# IMAGE: ${postprocessingfile} <CSH: refinement postprocessing script>" >> LOGS/${scriptname}.results
  echo "# IMAGE: SCRATCH/2dx_merge_scriptB.log <LOG: origtilt B output>" >> LOGS/${scriptname}.results
  chmod +x ${scriptBfile}
  ${scriptBfile} > SCRATCH/2dx_merge_scriptB.log
  # cat SCRATCH/2dx_merge_scriptB.out
  #
  #
  #############################################################################
  ${proc_2dx}/linblock "Launch refinement postprocessing script"
  #############################################################################
  #
  chmod +x ${postprocessingfile}
  ${postprocessingfile} >> LOGS/2dx_merge_scriptB.log
  #
  echo "################################################"
  echo "################################################"
  echo "output in file LOGS/2dx_merge_scriptB.log"
  echo "################################################"
  echo "################################################"
  #
  cat 2dx_origtiltk-console.log
  #\rm -f 2dx_origtiltk-console.log
  #
  # Don't evaluate refinement results here:
  # cat LOGS/${scriptname}-tmp.results >> LOGS/${scriptname}.results
  \rm -f LOGS/${scriptname}-tmp.results
  #
endif
#
echo "<<@progress: 40>"
#
#############################################################################
${proc_2dx}/linblock "Compile script to re-generate maps"
#############################################################################
#
set dirfile = "2dx_merge_dirfile.dat"
set scriptMfile = "SCRATCH/2dx_merge_scriptM.com"
\rm -f ${scriptMfile}
#
${bin_2dx}/2dx_merge_compileM.exe << eot
${dirfile}
${scriptMfile}
${realcell}
${realang}
${ALAT}
eot
#
echo "<<@progress: 50>>"
#
#############################################################################
${proc_2dx}/linblock "Launch script"
#############################################################################
#
echo "# IMAGE-IMPORTANT: ${imagename}-${SYM}.mrc <Merged Map: ${imagename}-${SYM}.mrc>" >> LOGS/${scriptname}.results
echo "# IMAGE-IMPORTANT: ${scriptMfile} <csh: scriptM to generate maps>" >> LOGS/${scriptname}.results
#
source ${scriptMfile}
#
echo "<<@progress: 100>>"
#
#
#############################################################################
#                                                                           #
echo "::"
${proc_2dx}/linblock "Done."
#                                                                           #
#############################################################################
#
exit
#
# Only to display this script in 2dx_merge:
source ${proc_2dx}/2dx_merge_redoMap_sub.com
#
