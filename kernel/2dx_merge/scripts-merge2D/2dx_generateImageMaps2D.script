#!/bin/csh -ef
####
#
#############################################################################
#                                                                           #
# Title: Generate Image Maps                                                #
#                                                                           #
# 2dx.org, GNU Plublic License.                                             #
#                                                                           #
# Created..........: 02/20/2006                                             #
# Last Modification: 09/20/2006                                             #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 97
#
# MANUAL: This script makes use of MRC and CCP4 commands to generate the projection maps of all selected images, using the latest phase origin settings.
#
# DISPLAY: RESMIN
# DISPLAY: RESMAX
# DISPLAY: SYM
# DISPLAY: ALAT
# DISPLAY: tempfac
# DISPLAY: MergeIQMAX
# DISPLAY: realang
# DISPLAY: realcell
# DISPLAY: merge_ref_num
# DISPLAY: create_PS
# DISPLAY: merge_data_type
# DISPLAY: merge_res_limit
#
#$end_local_vars
#
set bin_2dx = ""
set proc_2dx = ""
#
set tempkeep = ""
set RESMIN = ""
set RESMAX = ""
set ALAT = ""
set realang = ""
set realcell = ""
set MergeIQMAX = ""
set tempfac = ""
set SYM = ""
set make_reference = ""
set merge_ref_num = ""
set realang = ""
set zstarwin = ""
set MergeHKMAX = ""
set merge_res_limit = ""
set create_PS = ""
set merge_data_type = ""
set merge_reference = ""
set RFACAMP = ""
set Thread_Number = ""
#
#$end_vars
#
echo "<<@progress: 1>>"
#
set ccp4_setup = 'y'
source ${proc_2dx}/initialize
#
echo tempkeep = ${tempkeep}
echo RESMIN = ${RESMIN}
echo RESMAX = ${RESMAX}
echo ALAT = ${ALAT}
echo realang = ${realang}
echo realcell = ${realcell}
echo tempfac = ${tempfac}
echo MergeHKMAX = ${MergeHKMAX}
echo SYM = ${SYM}
#
set imagenumber = 1001
set imagename = "merge"
#
set scriptname = "2dx_generateImageMaps2D"
set merge_modus="2D"
set make_reference="n"
#
source ${proc_2dx}/2dx_merge_makedirs 
#
\rm -f LOGS/${scriptname}.results
#
set RESULTSPS = "n"
set RESULTSMRC = "n"
\rm -rf RESULTS-MRC
\rm -rf RESULTS-TIFF
\rm -rf RESULTS-PS
\mkdir RESULTS-MRC
\mkdir RESULTS-TIFF
echo 1000001 > RESULTS-TIFF/filenum.tmp
\mkdir RESULTS-PS
#
set date = `date`
echo date = ${date}
#
set olddir = $PWD
cd ..
set basedir = $PWD
cd ${olddir}
#
if ( ${ALAT} == "0" || ${ALAT} == "0.0" ) then
  ${proc_2dx}/protest "ALAT is not defined."
endif
set ALATnew = `echo ${ALAT} | awk '{ if ( $1 < 0 ) { s = -$1 } else { s = $1 }} END { print s }'`
if ( ${ALAT} != ${ALATnew} ) then
  set ALAT = ${ALATnew}
  echo "set ALAT = ${ALAT}" >> LOGS/${scriptname}.results
endif
#
set zwin = `echo ${ALAT} | awk '{ s = 1.0 / ( 2.0 * $1 ) } END { print s }'`
echo zwin = $zwin
#
set ILIST_VAL = 0
#
#???? Check this ???
set SCL = 1
echo "SCL = ${SCL}"
#
# contrast for grey plot
set scale = 1
echo "scale = ${scale}"
#
# The following is to make sure that for the next "Import Images", the default is correctly initialized.
set initialization_reset = "y"
set initialization_executable = "y"
echo "set initialization_reset = ${initialization_reset}" >> LOGS/${scriptname}.results
echo "set initialization_executable = ${initialization_executable}" >> LOGS/${scriptname}.results
#
#############################################################################
${proc_2dx}/linblock "sourcing sym2spsgrp_sub.com"
#############################################################################
#
source ${proc_2dx}/2dx_sym2spcgrp_sub.com
#
echo SYM = ${SYM}
echo spcgrp = ${spcgrp}
echo CCP4_SYM = ${CCP4_SYM}
#
############################################################################# 
${proc_2dx}/lin "2dx_merge_makedirs - to create all required subdirectories"
#############################################################################
#
${proc_2dx}/2dx_merge_makedirs
#
echo "<<@progress: 40>"
#
#############################################################################
${proc_2dx}/linblock "Compile script to re-generate maps"
#############################################################################
#
set dirfile = "2dx_merge_dirfile.dat"
set scriptMfile = "SCRATCH/2dx_merge_scriptM.com"
\rm -f ${scriptMfile}
#
${bin_2dx}/2dx_merge_compileM.exe << eot
${basedir}
${dirfile}
${scriptMfile}
${realcell}
${realang}
${ALAT}
${merge_data_type}
eot
#
echo "<<@progress: 50>>"
#
#############################################################################
${proc_2dx}/linblock "Launch script"
#############################################################################
#
echo "# IMAGE-IMPORTANT: ${imagename}-${SYM}.mrc <Merged Map: ${imagename}-${SYM}.mrc>" >> LOGS/${scriptname}.results
echo "# IMAGE-IMPORTANT: ${scriptMfile} <csh: scriptM to generate maps>" >> LOGS/${scriptname}.results
echo "# IMAGE: SCRATCH/${scriptname}.log <LOG: scriptM logfile>" >> LOGS/${scriptname}.results
#
source ${scriptMfile} > SCRATCH/${scriptname}.log
#
echo "<<@progress: 100>>"
#
#
#############################################################################
#                                                                           #
echo "::"
${proc_2dx}/linblock "Done."
#                                                                           #
#############################################################################
#
exit
#
# Only to display this script in 2dx_merge:
source ${proc_2dx}/2dx_merge_redoMap_sub.com
#
