#!/bin/csh 
#
# This is not an executable script. It is only sourced from other scripts.
# The purpose of this script is to initiate the sub-directories, where all the different file types will be stored.
# It also allows specifying in the variable names SCRATCH_DISK and FFTIR_DISK locations for the sub-directories 
# SCRATCH and FFTR, which can then lie on a different drive. If that different drive is a very fast drive, e.g. in form
# of a RAM disk, then the overall processing performance for processing a larger number of images simultaneously 
# in several instances of 2dx_image will strongly increase.
#
# You could also implement that fast disk by placing it on a RAID-0 or RAID-5-managed hard-drive stack, or on a Solid-State drive.
#
####
#
#
#################################################################################
#
#
# Create a SCRATCH disk on a fast drive, if the parameter SCRATCH_DISK is set
#
# if the variable is not set
if ( $?SCRATCH_DISK == 0 ) then
  set SCRATCH_DISK = "."
endif
#
alias createLink 'eval " \\
		  if (\! -e \!:1 ) then \\
    		    mkdir -p \!:1 \\
		  endif \\
		  if ( -e \!:2 ) then \\
		    if (`ls -l \!:2 | wc -l` != 0 ) then \\
	              mv \!:2/* \!:1 \\
		    endif \\
    		    rm -rf \!:2 \\
		  endif \\
		  ln -fs \!:1 \!:2 \\
    		  echo "::"\!:2" disk will be:" \\
		  echo "::"\!:1"'
#
if ( ${SCRATCH_DISK} == "." || ${SCRATCH_DISK} == "" ) then
  if ( ! -d SCRATCH ) then
    echo "::SCRATCH disk will be local."
    \mkdir SCRATCH
  endif
else
  set olddir = $PWD
  set newscratch = ${SCRATCH_DISK}${olddir}/SCRATCH
  if ( ! -l SCRATCH ) then
        createLink ${newscratch} SCRATCH
  else
    set target = `readlink SCRATCH`
    if ("$target" != "$newscratch") then
	echo "::SCRATCH target has changed."
    	createLink $newscratch SCRATCH
    endif
  endif
endif
#
# Create a SCRATCH disk on a fast drive, if the parameter SCRATCH_DISK is set
# if the variable is not set
if ( $?FFTIR_DISK == 0 ) then
  set FFTIR_DISK = "."
endif
#
if ( ${FFTIR_DISK} == "." || ${FFTIR_DISK} == "" ) then
  if ( ! -d FFTIR ) then
    echo "::FFTIR disk will be local."
    \mkdir FFTIR
  endif
else
  set olddir = $PWD
  set newfftir = ${FFTIR_DISK}${olddir}/FFTIR
  if ( ! -l FFTIR ) then
    createLink ${newfftir} FFTIR
  else
    set target = `readlink FFTIR`
    if ("$target" != "$newfftir") then
	echo "::FFTIR target has changed."
    	createLink ${newfftir} FFTIR
    endif
  endif
endif
#
if ( ! -d proc ) then
  \mkdir proc
endif
#
if ( ! -d LOGS ) then
  \mkdir LOGS
endif
#
if ( ! -d APH ) then
  \mkdir APH
endif
#
if ( ! -d PS ) then
  \mkdir PS
endif
#
if ( ! -d CUT ) then
  \mkdir CUT
endif
#
if ( ! -d PRJ ) then
  \mkdir PRJ
endif
#
#
