#!/bin/csh -ef
####
#
#############################################################################
#                                                                           #
# Title: Generate Map                                                       #
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 02/20/2006                                             #
# Last Modification: 02/20/2006                                             #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 90
#
# REMARK: The following section defines the text in the Manual pane of the GUI:
# MANUAL: This script makes use of CCP4 commands to generate the final projection map.
# MANUAL: The final output is an MRC-format image file that shows 2x2 unit cells. 
# MANUAL: The PostScript output file is skewed according to any potential non-square non-rectangular lattice, while the MRC-format file has the skewing information stored in the header.
#
# REMARK: The following section defines variables that will be displayed in the GUI:
# DISPLAY: SYN_Unbending
# DISPLAY: ML_doit
# DiSPLAY: ML_use_for_merging
# DISPLAY: RESMAX
# DISPLAY: RESMIN
# DISPLAY: ALAT
# DISPLAY: tempfac
# DISPLAY: imagename_original
# DISPLAY: SYM
# DISPLAY: phaori
# DISPLAY: phaoriFouFilter
# DISPLAY: zstarrange
# DISPLAY: zstarrange_real
# DISPLAY: Calc_from_zstarrange
# DISPLAY: ctfrev
# DISPLAY: realang
# DISPLAY: realcell
# DISPLAY: rot90
# DISPLAY: rot180
# DISPLAY: revhk
# DISPLAY: revhnd
# DISPLAY: sgnxch
# DISPLAY: revxsgn
# DISPLAY: tempkeep
# DISPLAY: comment
# DISPLAY: produceSpiderMap
# DISPLAY: mapscale
# DISPLAY: unitcellnumber
# DISPLAY: npo_cntrs_step
# DISPLAY: npo_cntrs_below 
# DISPLAY: MergeIQMAX
# DISPLAY: movie_enable
#
# REMARK: The following section defines the variables that the GUI will fill in from the database, before launching this script:
#$end_local_vars
#
set bin_2dx = ""
set proc_2dx = ""
set SCRATCH_DISK = ""
set FFTIR_DISK = ""
#
set SYN_Unbending = ""
set PHASEORI_done = ""
#
set produceSpiderMap = ""
set mapscale = ""
set unitcellnumber = ""
set SYN_Unbending = ""
set imagename = ""
set imagenumber = ""
set imagesidelength = ""
set tempkeep = ""
set RESMIN = ""
set RESMAX = ""
set phacon = ""
set CS = ""
set KV = ""
set ALAT = ""
set lattice = ""
set realang = ""
set realcell = ""
set magnification = ""
set stepdigitizer = ""
set TLTANG = ""
set TLTAXIS = ""
set TLTAXA = ""
set phaori = ""
set phaoriFouFilter = ""
set rot180 = ""
set revhk = ""
set rot90 = ""
set revhnd = ""
set sgnxch = ""
set revxsgn = ""
set ctfrev = ""
set beamtilt = ""
set zstarrange = ""
set Calc_from_zstarrange = ""
set zstarrange_real = ""
set tempfac = ""
set TAXA = ""
set TANGL = ""
set ML_doit = ""
set SYM = ""
set ctf_ttf = ""
set npo_cntrs_step = ""
set npo_cntrs_below = ""
set MergeIQMAX = ""
set movie_enable = ""
set ctfcor_imode = ""
set RFACAMP = ""
#
#$end_vars
#
echo "<<@progress: 1>>"
#
set ccp4_setup = 'y'
source ${proc_2dx}/initialize
#
set scriptname = 2dx_generateMAP
#
source ${proc_2dx}/2dx_makedirs 
#
\rm -f LOGS/${scriptname}.results
#
echo "<<@evaluate>>"
#
set date = `date`
echo date = ${date}
#
if ( ${ctfcor_imode}x == "x" || ${ctfcor_imode}x == "0x" ) then
  set iname = image
else
  set iname = image_ctfcor
endif
#
if ( ${Calc_from_zstarrange} == "y" ) then
  set zstarrange_real = `echo ${zstarrange} ${ALAT} | awk '{ s = 1.0 / ( $1 ) } END { print s }'`
  echo "set zstarrange_real = ${zstarrange_real}" >> LOGS/${scriptname}.results
  ${proc_2dx}/linblock "Calculating vertical resolution as ${zstarrange_real} Angstroems."
else
  set zstarrange = `echo ${zstarrange_real} ${ALAT} | awk '{ s = 1.0 / ( $1 ) } END { print s }'`
  echo "set zstarrange = ${zstarrange}" >> LOGS/${scriptname}.results   
  ${proc_2dx}/linblock "Calculating zstarrange as ${zstarrange} (with 0.5 = Nyquist resolution)."
endif
#
set ABANG = `echo $realang | awk '{s=180-$1} END {print s}'`
echo ABANG = ${ABANG}
set IAQP2 = 0
set IVERBOSE = 1
set LOGOUTPUT = F
set LPROTFOUFIL = T
set phastepnum = 1
set phastep = 0.1
#
#############################################################################
#
set SYM_sub = 'p1'
set spcgrp = "1"
set spcgroup_num = "1"
set CCP4_SYM = "1"
set ML_sym_val = "1"
#
set symmetry = 'p1'
set spcgrp_local = 1
set produceSpiderMapLocal = ${produceSpiderMap}
set CCP4_SYM = 1
set rotate_to_Z = "no"
#
# origtilt does something strange when working with spcgrp>1. (TODO).
# Symmetrization is therefore here only done by the CCP4 programs.
#
set spcgrp_first = 1
echo spcgrp_first = ${spcgrp_first}
#
echo spcgrp = ${spcgrp}
echo SYM_sub = ${SYM_sub}
echo CCP4_SYM = ${CCP4_SYM}
echo rotate_to_Z = ${rotate_to_Z}
#
#
#############################################################################
echo ":: "
${proc_2dx}/linblock "Sourcing generateMap script for Unbending reconstruction in p1 symmetry"
echo ":: "
#############################################################################
#############################################################################
#############################################################################
#
if ( ${SYN_Unbending} == "0" ) then
    # FouFilter Unbending result is used:
    set aphfile = APH/${imagename}_fou_ctf.aph
    #
    # A check in case somebody just upgraded from an earlier version of 2dx:
    if ( ! -e ${aphfile} ) then
      if ( -e APH/${imagename}_ctf.aph ) then
        \cp APH/${imagename}_ctf.aph ${aphfile}
      endif
    endif
    #
else
    # Synthetic Unbending result is used:
    set aphfile = APH/${imagename}_syn_ctf.aph
endif
#
echo "# IMAGE-IMPORTANT: ${aphfile} <APH: Input Unbending Amp&Phase File [H,K,A,P(CTF Phase flipped),IQ,Back,CTF]>" >> LOGS/${scriptname}.results
if ( ${SYN_Unbending} == "0" ) then
  echo "# IMAGE-IMPORTANT: PS/${iname}-quadserch2b.ps <PS: Vector Plot of distortions 2>" >> LOGS/${scriptname}.results
else
  echo "# IMAGE-IMPORTANT: PS/${iname}-quadserchSc.ps <PS: Vector Plot of distortions Sc>" >> LOGS/${scriptname}.results
endif
if ( ${ctf_ttf} == 'CTF' ) then
  echo "# IMAGE-IMPORTANT: PS/${iname}_ctf.ps <PS: IQ Plot after CTF correction>" >> LOGS/${scriptname}.results
else
  echo "# IMAGE-IMPORTANT: PS/${iname}_ttplot_unbend2.ps <PS: IQ Plot after TTF correction>" >> LOGS/${scriptname}.results
endif
#
echo "# IMAGE-IMPORTANT: frame_quadserch.ps <PS: QUADSERCH Movie Profiles>" >> LOGS/${scriptname}.results
echo "# IMAGE-IMPORTANT: frame_unbending.ps <PS: CCUNBEND Movie Profiles>" >> LOGS/${scriptname}.results

set prefix = ""
set prename = ""
#
set phaori_local = ${phaori}
source ${proc_2dx}/2dx_generateMap_sub.com
#
if ( ${ML_doit} == 'y' ) then
  echo ":: "
  ${proc_2dx}/linblock "Sourcing generateMap script for ML reconstruction in p1 symmetry"
  echo ":: "
  set aphfile = APH/ML_result.aph
  echo "# IMAGE-IMPORTANT: ${aphfile} <APH: ML Input Amp&Phase File>" >> LOGS/${scriptname}.results
  set prefix = "ML_"
  set prename = "ML "
  #
  set phaori_local = "0.0,0.0"
  source ${proc_2dx}/2dx_generateMap_sub.com
  #
endif
#
if ( ${movie_enable} == "y" ) then
  set aphfile = APH/${imagename}_movie_fou_ctf.aph
  if ( -e ${aphfile} ) then
    echo ":: "
    ${proc_2dx}/linblock "Generating map from MovieMode processing"
    echo ":: "
    echo "# IMAGE-IMPORTANT: ${aphfile} <APH: Amp&Phase from MovieMode processing>" >> LOGS/${scriptname}.results
    set prefix = "movie_"
    set prename = "MovieMode "
    #
    set phaori_local = ${phaori}
    source ${proc_2dx}/2dx_generateMap_sub.com
  else
    echo ":: "
    ${proc_2dx}/linblock "Not generating map from MovieMode processing, file not found: ${aphfile}"
    echo ":: "
  endif
  #
  set aphfile = APH/${imagename}_movieB_fou_ctf.aph
  if ( -e ${aphfile} ) then
    echo ":: "
    ${proc_2dx}/linblock "Generating map from MovieModeB processing"
    echo ":: "
    echo "# IMAGE-IMPORTANT: ${aphfile} <APH: Amp&Phase from MovieModeB processing>" >> LOGS/${scriptname}.results
    set prefix = "movieB_"
    set prename = "MovieModeB "
    #
    set phaori_local = ${phaori}
    source ${proc_2dx}/2dx_generateMap_sub.com
  else
    echo ":: "
    ${proc_2dx}/linblock "Not generating map from MovieModeB processing, file not found: ${aphfile}"
    echo ":: "
  endif
  #
endif
#
echo "# IMAGE: ${imagename}_ref.mrc <Reference 3D Map Projection>"  >> LOGS/${scriptname}.results
#
#############################################################################
#############################################################################
#############################################################################
#
echo "<<@progress: 100>>"
#
##########################################################################
${proc_2dx}/linblock "${scriptname} - normal end."
##########################################################################
#
exit
#
# Just to make sure it is displayed in the 2dx GUI:
source ${proc_2dx}/2dx_checklattice_sub.com 
#
#

