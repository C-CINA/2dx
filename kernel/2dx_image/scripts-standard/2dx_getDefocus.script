#!/bin/csh -ef
#############################################################################
#                                                                           #
# Title: Get Central Defocus                                                #
#                                                                           #
# (C) 2dx.org, GNU Plublic License.                                         #
#                                                                           #
# Created..........: 02/20/2006                                             #
# Last Modification: 02/20/2006                                             #
# Author...........: 2dx.org                                                #
#                                                                           #
#############################################################################
#
# SORTORDER: 15
#
# MANUAL: This script calculates the defocus and asgimatism of the image, using Niko Grigorieff's program CTFFIND3. 
#
# MANUAL: The parameter <I>Defocus Search Start</I> and <I>Defocus Start End</I> define the search range for the defocus, and <I>Defocus Search Step</I> defines the step size of the search. This may take some time, if the <I>Defocus Search Step</I> is set to small values.
#
# MANUAL: If you know that your defocus is around 4000.0 Angstroems, you could set the search range to 2000.0 to 6000.0 Angstroems, to save time.
#
# GLOBAL: imagename
# GLOBAL: nonmaskimagename
# GLOBAL: imagesidelength
# GLOBAL: magnification
# GLOBAL: stepdigitizer
# GLOBAL: TLTAXIS
# GLOBAL: TLTANG
# GLOBAL: TLTAXA
# GLOBAL: TAXA
# GLOBAL: TANGL
# GLOBAL: defocus
# GLOBAL: defocusbackup
# GLOBAL: df_start
# GLOBAL: df_end
# GLOBAL: df_step 
# GLOBAL: df_PAve 
# GLOBAL: det_defocus
# GLOBAL: phacon
# GLOBAL: RESMAX
# GLOBAL: lattice
# GLOBAL: comment
# GLOBAL: tempkeep
#
#$end_local_vars
#
set bin_2dx = ""
set proc_2dx = ""
#
set SYN_Unbending = ""
set PHASEORI_done = ""
#
set imagename = ""
set nonmaskimagename = ""
set imagesidelength = ""
set lattice = ""
set magnification = ""
set stepdigitizer = ""
set CS = ""
set KV = ""
set defocus = ""
set df_start = ""
set df_end = ""
set df_step = ""
set df_PAve = ""
set RESMIN = ""
set RESMAX = ""
set phacon = ""
set det_defocus = ""
set det_tilt = ""
set ctf_ttf = ""
set TLTAXIS = ""
set TLTAXA = ""
set TLTANG = ""
set tempkeep = ""
set expected_tltang = ""
set expected_tltang_uncertainty = ""
#
#$end_vars
#
set scriptname = 2dx_getDefocus
#
\rm -f LOGS/${scriptname}.results
#
source ${proc_2dx}/initialize
#
echo "<<@evaluate>>"
#
if ( (${SYN_Unbending} != "0") && (${PHASEORI_done} == "y")) then
  ${proc_2dx}/linblock "Skipping. Synthetical Reference is used"
  ${proc_2dx}/linblock "Defocus should be determined already."
  #
  echo "# IMAGE-IMPORTANT: FFTIR/${imagename}.fft.mrc <FFT of Image>" >> LOGS/${scriptname}.results
  echo "# IMAGE-IMPORTANT: FFTIR/${imagename}.red.fft.mrc <FFT of Downsampled Image>" >> LOGS/${scriptname}.results
  #
  exit
  ##########################################################################
  ${proc_2dx}/linblock "${scriptname} - normal end."
  ##########################################################################
endif
#
if ( ${det_defocus}x == 'x' ) then
  set det_defocus = 'y'
  echo "set det_defocus = ${det_defocus}" >> LOGS/${scriptname}.results
  echo ":: det_defocus corrected to ${det_defocus}"
endif
#
if ( ${det_defocus} == 'n' ) then
  ${proc_2dx}/linblock "Skipping. Not determining any defocus."
  #
  echo "# IMAGE-IMPORTANT: FFTIR/${imagename}.fft.mrc <FFT of Image>" >> LOGS/${scriptname}.results
  echo "# IMAGE-IMPORTANT: FFTIR/${imagename}.red.fft.mrc <FFT of Downsampled Image>" >> LOGS/${scriptname}.results
  #
  exit
  ##########################################################################
  ${proc_2dx}/linblock "${scriptname} - normal end."
  ##########################################################################
endif
#
echo nonmaskimagename = ${nonmaskimagename}
echo imagesidelength = ${imagesidelength}
echo magnification = ${magnification}
echo stepdigitizer = ${stepdigitizer}
echo CS = ${CS}
echo KV = ${KV}
echo defocus = ${defocus}
echo RESMIN = ${RESMIN}
echo RESMAX = ${RESMAX}
echo phacon = ${phacon}
echo det_tilt = ${det_tilt}
echo ctf_ttf = ${ctf_ttf}
#
echo "<<@progress: 1>>"
#
set date = `date`
echo date = ${date}
#
if ( ! -e ${nonmaskimagename}.mrc ) then
  ${proc_2dx}/protest "ERROR: The non-masked image name ${nonmaskimagename}.mrc does not exist."
endif
#
echo "# IMAGE-IMPORTANT: FFTIR/${imagename}.fft.mrc <FFT of Image>" >> LOGS/${scriptname}.results
echo "# IMAGE-IMPORTANT: FFTIR/${imagename}.red.fft.mrc <FFT of Downsampled Image>" >> LOGS/${scriptname}.results
#
if ( ${magnification} == '' ) then
  ${proc_2dx}/protest "ERROR: Magnification is not defined."
endif
#
if ( ${stepdigitizer} == '' ) then
  ${proc_2dx}/protest "ERROR: Digitizer stepsize is not defined."
endif
#
set ampcon = `echo ${phacon} | awk '{s=sqrt(1.0 - ( $1 * $1 ))} END {print s}'`
echo ampcon = ${ampcon}
#
echo ":: df_start,df_end,df_step = ${df_start}, ${df_end}, ${df_step}"
#
set resotmp = `echo ${RESMAX} | awk '{if ($1 < 16.0) { s = 8.0 } else { s = $1 / 2.0 }} END { print s }'`
set resolim = `echo ${resotmp} | awk '{if ($1 > 30.0) { s = 30.0 } else { s = $1 }} END { print s }'`
echo resolim = $resolim
set resoma = `echo ${RESMIN} | awk '{ s = 1.5 * $1 } END { print s }'`
echo resoma = ${resoma}
#
set oldlat = `echo ${lattice}`
set lattice = `echo ${lattice} | sed 's/ /,/g' | sed 's/,,,/,/g' | sed 's/,,/,/g'`
if ( "${oldlat}" != ${lattice} ) then
  echo "set lattice = ${lattice}" >> LOGS/${scriptname}.results
  echo "lattice corrected from ${oldlat} to ${lattice}"
endif
#
set inimage = ${nonmaskimagename}.mrc
#
echo "<<@progress: 20>>"
#
#
if ( ${det_defocus} == 'y' ) then
  #
  set docrop = `echo ${imagesidelength} | awk '{ if ( $1 > 4800 ) { s = 1 } else { s = 0 }} END { print s }'`
  if ( ${docrop} == "1" ) then
    #
    set minx = `echo ${imagesidelength} | awk '{ s = ( $1 / 2 ) - 2048 } END { print s }'`
    set maxx = `echo ${imagesidelength} | awk '{ s = ( $1 / 2 ) + 2047 } END { print s }'`
    set miny = ${minx}
    set maxy = ${maxx}
    # 
    ##############################################################################
    ${proc_2dx}/lin "Cropping into smaller 4096x4096 image"
    ##############################################################################
    #
    \rm -f SCRATCH/2dx_ctffind-cut.mrc
    #
    ${bin_2dx}/labelh.exe << eot
${inimage}
1
SCRATCH/2dx_ctffind-cut.mrc
  ${minx} ${maxx} ${miny} ${maxy}
eot
    #
    echo "# IMAGE: SCRATCH/2dx_ctffind-cut.mrc <Cropped central tile>" >> LOGS/${scriptname}.results
    #
  else
    \cp -f ${inimage}.mrc SCRATCH/2dx_ctffind-cut.mrc
  endif
  #
  echo "<<@progress: 30>>"
  #
  ##############################################################################
  ${proc_2dx}/lin "Downsampling by a factor of 2x2"
  ##############################################################################
  #
  \rm -f SCRATCH/2dx_ctffind-cut-down.mrc
  #
  ${bin_2dx}/labelh.exe << eot
SCRATCH/2dx_ctffind-cut.mrc
4               ! average adjacent pixels
SCRATCH/2dx_ctffind-cut-down.mrc
2,2
eot
  #
  echo "# IMAGE: SCRATCH/2dx_ctffind-cut-down.mrc <Downsampled central tile>" >> LOGS/${scriptname}.results
  #
  echo "<<@progress: 40>>"
  #
  #############################################################################
  ${proc_2dx}/linblock "2dx_ctffind3.exe - to get defocus and astigmatism"
  #############################################################################
  #
  echo imagesidelength = ${imagesidelength}
  set tilesize = `echo ${imagesidelength} | awk '{if ( $1 < 3000 ) { s = 128 } else { s = 256 }} END { print s }'`
  echo tilesize = ${tilesize}
  echo ":Using resolution range ${resoma}A ... ${resolim}A, and tiles of ${tilesize} pixels width."
  #
  #
  \rm -f SCRATCH/2dx_ctffind3.result.tmp
  set outimage = 'SCRATCH/2dx_ctffind3.out.mrc'
  \rm -f ${outimage} 
  #
  # Dummy setting of parameters that are not used here, as long as inoast = 0
  set inoast = 0
  set dfref = "1.0,1.0,0.0"
  set downstepdigitizer = `echo ${stepdigitizer} | awk '{ s = 2 * $1 } END { print s }'`
  #
  echo "# IMAGE-IMPORTANT: LOGS/2dx_ctffind3.txt <TXT: Logfile of 2dx_ctffind3.exe>" >>  LOGS/${scriptname}.results
  #
  ${bin_2dx}/2dx_ctffind3.exe > LOGS/2dx_ctffind3.txt << eof
SCRATCH/2dx_ctffind-cut-down.mrc
${outimage}
${CS},${KV},${ampcon},${magnification},${downstepdigitizer}
${tilesize},${resoma},${resolim},${df_start},${df_end},${df_step}
${inoast},${dfref},0.0
eof
  #
  if ( ! -e ${outimage} ) then
    ${proc_2dx}/protest "2dx_ctffind3: ERROR: ${outimage} does not exist."
  endif
  #
  echo "<<@progress: 70>>"
  #
  set newdef = `cat SCRATCH/2dx_ctffind3.result.tmp | head -1`
  set drms1 = `cat SCRATCH/2dx_ctffind3.result.tmp | tail -1`
  set def1 = `echo $newdef | awk '{s=$1} END {print s}'`
  set def2 = `echo $newdef | awk '{s=$2} END {print s}'`
  set ang  = `echo $newdef | awk '{s=$3} END {print s}'`
  #
  \rm -f SCRATCH/2dx_ctffind3.result.tmp
  #
  echo "# IMAGE-IMPORTANT: ${outimage} <Defocus Thonring Fit>" >>  LOGS/${scriptname}.results
  #
  set newdef = `echo ${def1},${def2},${ang}`
  echo "set defocus = ${newdef}" >> LOGS/${scriptname}.results
  ${proc_2dx}/linblock "new defocus is ${newdef}"
  set defocus = ${newdef}
  #
  if ( ${tempkeep} == "n" ) then
    \rm -f SCRATCH/2dx_ctffind-cut.mrc
    \rm -f SCRATCH/2dx_ctffind-cut-down.mrc
  endif
  #
  echo " " >> History.dat
  echo "::Defocus = ${defocus}" >> History.dat
  #
endif
#
echo "<<@progress: 80>>"
#
echo "set DEFOCUS_done = y" >> LOGS/${scriptname}.results
#
echo "set CTF_done = n" >> LOGS/${scriptname}.results
echo "set MERGING_done = n" >> LOGS/${scriptname}.results
#
echo "<<@progress: 100>>"
#
##########################################################################
${proc_2dx}/linblock "${scriptname} - normal end."
##########################################################################
##
#
#
#
