#!/bin/bash
#
# scirpt to build an installer every night from the current source code in our repository.  
#
# Marcel Arheit 17.09.2010
set -e
set -o pipefail
# to get an email notifcation if something goes wrong
function notify {
  _LOG=$1;
  cat $_LOG | mail -s "[2dx] nightly build failed" arheit@gmail.com
  if [ $# -gt 1 ]; then
  	exit $2
  fi
  exit 1
}

TMPLOG=/tmp/nightly_build.log
>$TMPLOG
function output {
	echo $*  | tee -a $TMPLOG 
}
#These global variables should be changed to fit the local setup
BUILD_DIR=~/code/build/2dx
output '*############################################################################*'
output '| Locating the source code                                                   |'
output '*============================================================================*'
output '|                                                                            |'

if [ $# -lt 1 ]
then
	output "No source code directory specified"
	output "Usage: `basename $0:` <source_dir>" 
	output 'Aborting!'
	notify $TMPLOG 1
fi
SOURCE_DIR=$1
output cd ${SOURCE_DIR} || { output "Could not change to " $SOURCE_DIR;  notify $TMPLOG 2; }
cd ${SOURCE_DIR} || { output "Could not change to  $SOURCE_DIR"; notify $TMPLOG 2; }

SCRIPT_DIR=$(pwd)/build_scripts
if [ ! -d $SCRIPT_DIR ]; then
	output "Could not find $SCRIPT_DIR"
        notify $TMPLOG 9;	
fi
output '|                                                                            |'
output '*============================================================================*'
output ''
output ''
output ''
output ''






output '*############################################################################*'
output '| Updating the source code                                                   |'
output '*============================================================================*'
output '|                                                                            |'

eval `ssh-agent -s` 
output svn up || { output "Could not update the repository"; notify $TMPLOG 3; }
svn up || { output "Could not update the repository"; notify $TMPLOG 3; }
kill $SSH_AGENT_PID
output '|                                                                            |'
output '*============================================================================*'
output ''
output ''
output ''
output ''

output '*############################################################################*'
output '| packaging the source code                                                  |' 
output '*============================================================================*'
output '|                                                                            |'
PACKAGE_PATH=$BUILD_DIR"/packages/"
mkdir -p  $PACKAGE_PATH
output '*============================================================================*'
output '| exporting the source code to $PACKAGE_PATH                                 |' 
output '*============================================================================*'
output '|                                                                            |'

EXPORT_DIR=2dx_nightly_source
output svn export --force  $SOURCE_DIR $EXPORT_DIR || { output "Could not export the source code"; notify $TMPLOG 4; }
svn export --force  $SOURCE_DIR $EXPORT_DIR || { output "Could not export the source code"; notify $TMPLOG 4; }
output '|                                                                            |'
output '*============================================================================*'
output '| archiving the source code to 2dx_nightly_source.tar.gz                     |' 
output '*============================================================================*'
output '|                                                                            |'

OUTFILE=2dx_nightly_source.tar.gz
output tar -zcf $PACKAGE_PATH$OUTFILE $EXPORT_DIR  || { output "Could not package the source code"; notify $TMPLOG 5; }
tar -zcf $PACKAGE_PATH$OUTFILE $EXPORT_DIR || { output "Could not package the source code"; notify $TMPLOG 5; }
output '|                                                                            |'
output '*============================================================================*'
output ''
output ''
output ''
output ''

output '*############################################################################*'
output '| Moving Source Package to Server                                            |'
output '*============================================================================*'
output '|                                                                            |'


output ${SCRIPT_DIR}/upload_nightly_build.sh  $PACKAGE_PATH$OUTFILE || { output "Could not upload the package $OUTFILE"; notify $TMPLOG 6; }
${SCRIPT_DIR}/upload_nightly_build.sh  $PACKAGE_PATH$OUTFILE || { output "Could not upload the package $OUTFILE"; notify $TMPLOG 6; }
output '|                                                                            |'
output '*============================================================================*'
output ''
output ''
output ''
output ''

output '*############################################################################*'
output '| Removig previous build                                                     |'
output '*============================================================================*'
output '|                                                                            |'
# in-place install so far
output rm -rf $BUILD_DIR || { output "Could not remove the previous build"; notify $TMPLOG 7; }
rm -rf $BUILD_DIR || { output "Could not remove the previous build"; notify $TMPLOG 7; }
output '|                                                                            |'
output '*============================================================================*'
output ''
output ''
output ''
output ''

output '*############################################################################*'
output '| Calling ./build_all                                                       |'
output '*============================================================================*'
output '|                                                                            |'
# in-place install so far
output ./build_all $BUILD_DIR $BUILD_DIR ON || { output "Could not build the bundle"; notify $TMPLOG 7; }
./build_all $BUILD_DIR $BUILD_DIR ON || { output "Could not build the bundle"; notify $TMPLOG 7; } 
output '|                                                                            |'
output '*============================================================================*'
output ''
output ''
output ''
output ''



SYSTEM=`uname`
if [ $SYSTEM = "Darwin" ]
then
	output '*############################################################################*'
	output '| changing the plugins to link to the dylibs of the bundle                   |'
	output '*============================================================================*'
	output '|                                                                            |'

	./installation/mac_osx_installer/change_dylibs.sh $BUILD_DIR

	output '|                                                                            |'
	output '*============================================================================*'
	output ''
	output ''
	output ''
	output ''

	output '*############################################################################*'
	output '| Making the Mac OS X installer package                                      |'
	output '*============================================================================*'
	output '|                                                                            |'
	SW_VERSION=`sw_vers -productVersion`
	DATE=`date "+%d_%b_%Y"`
	OUTFILE="2dx_MAC_OS_X_"$SW_VERSION"_nightly_build.pkg"
	PACKAGE_PATH=$BUILD_DIR"/packages/"
	if [ ! -d $PACKAGE_PATH ]
	then
		output mkdir $PACKAGE_PATH || { output "Could not create the dir $PACKAGE_PATH"; notify $TMPLOG 8; }
		mkdir $PACKAGE_PATH || { output "Could not create the dir $PACKAGE_PATH"; notify $TMPLOG 8; }
	fi
	output "Writing the package "$OUTFILE" to: " $PACKAGE_PATH
	output installation/mac_osx_installer/installer_nightly_build.sh $BUILD_DIR  $PACKAGE_PATH$OUTFILE || { output "Could not package MAC OS X installer  $PACKAGE_PATH$OUTFILE"; notify $TMPLOG 9; }
	installation/mac_osx_installer/installer_nightly_build.sh $BUILD_DIR  $PACKAGE_PATH$OUTFILE || { output "Could not package MAC OS X installer  $PACKAGE_PATH$OUTFILE"; notify $TMPLOG 9; }
	output '|                                                                            |'
	output '*============================================================================*'
	output ''
	output ''
	output ''
	output ''
	
	
	
	output '*############################################################################*'
	output '| Moving Package to Server				                   |'
	output '*============================================================================*'
	output '|                                                                            |'

	
	output ${SCRIPT_DIR}/upload_nightly_build.sh  $PACKAGE_PATH$OUTFILE || { output "Could not upload the package $OUTFILE"; notify $TMPLOG 10; }
	${SCRIPT_DIR}/upload_nightly_build.sh  $PACKAGE_PATH$OUTFILE || { output "Could not upload the package $OUTFILE"; notify $TMPLOG 10; }
	output '|                                                                            |'
	output '*============================================================================*'
	output ''
	output ''
	output ''
	output ''
fi
exit 0
